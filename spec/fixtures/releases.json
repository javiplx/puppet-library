{
  "pagination": {
    "limit": 2,
    "offset": 0,
    "first": "/v3/releases?module=puppetlabs-stdlib&limit=2&offset=0",
    "previous": null,
    "current": "/v3/releases?module=puppetlabs-stdlib&limit=2&offset=0",
    "next": "/v3/releases?module=puppetlabs-stdlib&limit=2&offset=2",
    "total": 37
  },
  "results": [
    {
      "uri": "/v3/releases/puppetlabs-stdlib-4.1.0",
      "module": {
        "uri": "/v3/modules/puppetlabs-stdlib",
        "name": "stdlib",
        "owner": {
          "uri": "/v3/users/puppetlabs",
          "username": "puppetlabs",
          "gravatar_id": "fdd009b7c1ec96e088b389f773e87aec"
        }
      },
      "version": "4.1.0",
      "metadata": {
        "types": [
          {
            "doc": "  A simple resource type intended to be used as an anchor in a composite class.\n\n  In Puppet 2.6, when a class declares another class, the resources in the\n  interior class are not contained by the exterior class. This interacts badly\n  with the pattern of composing complex modules from smaller classes, as it\n  makes it impossible for end users to specify order relationships between the\n  exterior class and other modules.\n\n  The anchor type lets you work around this. By sandwiching any interior\n  classes between two no-op resources that _are_ contained by the exterior\n  class, you can ensure that all resources in the module are contained.\n\n      class ntp {\n        # These classes will have the correct order relationship with each\n        # other. However, without anchors, they won't have any order\n        # relationship to Class['ntp'].\n        class { 'ntp::package': }\n        -> class { 'ntp::config': }\n        -> class { 'ntp::service': }\n\n        # These two resources \"anchor\" the composed classes within the ntp\n        # class.\n        anchor { 'ntp::begin': } -> Class['ntp::package']\n        Class['ntp::service']    -> anchor { 'ntp::end': }\n      }\n\n  This allows the end user of the ntp module to establish require and before\n  relationships with Class['ntp']:\n\n      class { 'ntp': } -> class { 'mcollective': }\n      class { 'mcollective': } -> class { 'ntp': }\n\n",
            "parameters": [
              {
                "doc": "The name of the anchor resource.",
                "name": "name"
              }
            ],
            "name": "anchor",
            "properties": [

            ]
          },
          {
            "doc": "    Ensures that a given line is contained within a file.  The implementation\n    matches the full line, including whitespace at the beginning and end.  If\n    the line is not contained in the given file, Puppet will add the line to\n    ensure the desired state.  Multiple resources may be declared to manage\n    multiple lines in the same file.\n\n    Example:\n\n        file_line { 'sudo_rule':\n          path => '/etc/sudoers',\n          line => '%sudo ALL=(ALL) ALL',\n        }\n        file_line { 'sudo_rule_nopw':\n          path => '/etc/sudoers',\n          line => '%sudonopw ALL=(ALL) NOPASSWD: ALL',\n        }\n\n    In this example, Puppet will ensure both of the specified lines are\n    contained in the file /etc/sudoers.\n\n",
            "providers": [
              {
                "doc": "",
                "name": "ruby"
              }
            ],
            "parameters": [
              {
                "doc": "An arbitrary name used as the identity of the resource.",
                "name": "name"
              },
              {
                "doc": "An optional regular expression to run against existing lines in the file;\\nif a match is found, we replace that line rather than adding a new line.",
                "name": "match"
              },
              {
                "doc": "The line to be appended to the file located by the path parameter.",
                "name": "line"
              },
              {
                "doc": "The file Puppet will ensure contains the line specified by the line parameter.",
                "name": "path"
              }
            ],
            "name": "file_line",
            "properties": [
              {
                "doc": "The basic property that the resource should be in.  Valid values are `present`, `absent`.",
                "name": "ensure"
              }
            ]
          }
        ],
        "license": "Apache 2.0",
        "checksums": {
          "spec/unit/puppet/parser/functions/uriescape_spec.rb": "8d9e15156d93fe29bfe91a2e83352ff4",
          "Gemfile": "a7144ac8fdb2255ed7badb6b54f6c342",
          "spec/unit/facter/root_home_spec.rb": "4f4c4236ac2368d2e27fd2f3eb606a19",
          "spec/unit/puppet/parser/functions/size_spec.rb": "d126b696b21a8cd754d58f78ddba6f06",
          "spec/unit/puppet/parser/functions/shuffle_spec.rb": "2141a54d2fb3cf725b88184d639677f4",
          "spec/unit/puppet/parser/functions/validate_re_spec.rb": "b21292ad2f30c0d43ab2f0c2df0ba7d5",
          "lib/puppet/parser/functions/flatten.rb": "25777b76f9719162a8bab640e5595b7a",
          "lib/puppet/parser/functions/ensure_packages.rb": "ca852b2441ca44b91a984094de4e3afc",
          "lib/puppet/parser/functions/validate_augeas.rb": "d4acca7b8a9fdada9ae39e5101902cc1",
          "spec/unit/puppet/parser/functions/unique_spec.rb": "2df8b3b2edb9503943cb4dcb4a371867",
          "tests/has_ip_network.pp": "abc05686797a776ea8c054657e6f7456",
          "spec/fixtures/manifests/site.pp": "d41d8cd98f00b204e9800998ecf8427e",
          "lib/puppet/parser/functions/defined_with_params.rb": "ffab4433d03f32b551f2ea024a2948fc",
          "lib/puppet/parser/functions/size.rb": "8972d48c0f9e487d659bd7326b40b642",
          "lib/puppet/parser/functions/has_ip_address.rb": "ee207f47906455a5aa49c4fb219dd325",
          "lib/facter/util/puppet_settings.rb": "9f1d2593d0ae56bfca89d4b9266aeee1",
          "spec/unit/puppet/parser/functions/any2array_spec.rb": "167e114cfa222de971bf8be141766b6a",
          "spec/unit/facter/pe_required_facts_spec.rb": "0ec83db2a004a0d7f6395b34939c53b9",
          "spec/unit/puppet/parser/functions/bool2num_spec.rb": "67c3055d5d4e4c9fbcaca82038a09081",
          "lib/facter/root_home.rb": "f559294cceafcf70799339627d94871d",
          "lib/puppet/parser/functions/loadyaml.rb": "2b912f257aa078e376d3b3f6a86c2a00",
          "spec/unit/puppet/parser/functions/is_float_spec.rb": "171fc0e382d9856c2d8db2b70c9ec9cd",
          "lib/puppet/type/anchor.rb": "bbd36bb49c3b554f8602d8d3df366c0c",
          "lib/puppet/parser/functions/getparam.rb": "4dd7a0e35f4a3780dcfc9b19b4e0006e",
          "lib/facter/facter_dot_d.rb": "b35b8b59ec579901444f984127f0b833",
          "lib/puppet/parser/functions/strftime.rb": "e02e01a598ca5d7d6eee0ba22440304a",
          "lib/puppet/parser/functions/max.rb": "f652fd0b46ef7d2fbdb42b141f8fdd1d",
          "spec/spec_helper.rb": "4449b0cafd8f7b2fb440c0cdb0a1f2b3",
          "lib/puppet/parser/functions/merge.rb": "52281fe881b762e2adfef20f58dc4180",
          "lib/puppet/parser/functions/validate_slength.rb": "0ca530d1d3b45c3fe2d604c69acfc22f",
          "spec/unit/puppet/parser/functions/suffix_spec.rb": "c3eed8e40066f2ad56264405c4192f2e",
          "spec/unit/puppet/parser/functions/validate_bool_spec.rb": "32a580f280ba62bf17ccd30460d357bd",
          "spec/unit/puppet/parser/functions/str2bool_spec.rb": "60e3eaea48b0f6efccc97010df7d912c",
          "lib/puppet/parser/functions/reject.rb": "689f6a7c961a55fe9dcd240921f4c7f9",
          "lib/puppet/parser/functions/delete.rb": "9b17b9f7f820adf02360147c1a2f4279",
          "lib/puppet/parser/functions/strip.rb": "273d547c7b05c0598556464dfd12f5fd",
          "lib/puppet/parser/functions/values.rb": "066a6e4170e5034edb9a80463dff2bb5",
          "LICENSE": "38a048b9d82e713d4e1b2573e370a756",
          "lib/puppet/parser/functions/is_array.rb": "875ca4356cb0d7a10606fb146b4a3d11",
          "spec/unit/puppet/parser/functions/strip_spec.rb": "a01796bebbdabd3fad12b0662ea5966e",
          "lib/puppet/parser/functions/swapcase.rb": "4902f38f0b9292afec66d40fee4b02ec",
          "lib/puppet/parser/functions/has_ip_network.rb": "b4d726c8b2a0afac81ced8a3a28aa731",
          "spec/unit/puppet/parser/functions/validate_array_spec.rb": "bcd231229554785c4270ca92ef99cb60",
          "lib/puppet/parser/functions/validate_re.rb": "c6664b3943bc820415a43f16372dc2a9",
          "lib/puppet/parser/functions/time.rb": "08d88d52abd1e230e3a2f82107545d48",
          "lib/puppet/parser/functions/is_numeric.rb": "0a9bcc49e8f57af81bdfbb7e7c3a575c",
          "spec/unit/puppet/parser/functions/merge_spec.rb": "a63c0bc2f812e27fbef570d834ef61ce",
          "lib/puppet/parser/functions/count.rb": "9eb74eccd93e2b3c87fd5ea14e329eba",
          "spec/unit/puppet/parser/functions/values_at_spec.rb": "de45fd8abbc4c037c3c4fac2dcf186f9",
          "spec/monkey_patches/publicize_methods.rb": "ce2c98f38b683138c5ac649344a39276",
          "spec/unit/puppet/parser/functions/is_hash_spec.rb": "408e121a5e30c4c5c4a0a383beb6e209",
          "lib/puppet/parser/functions/chop.rb": "4691a56e6064b792ed4575e4ad3f3d20",
          "spec/unit/puppet/parser/functions/validate_cmd_spec.rb": "538db08292a0ecc4cd902a14aaa55d74",
          "spec/unit/puppet/parser/functions/is_integer_spec.rb": "a302cf1de5ccb494ca9614d2fc2b53c5",
          "spec/functions/ensure_resource_spec.rb": "3423a445e13efc7663a71c6641d49d07",
          "spec/unit/puppet/parser/functions/keys_spec.rb": "35cc2ed490dc68da6464f245dfebd617",
          "manifests/init.pp": "f2ba5f36e7227ed87bbb69034fc0de8b",
          "lib/puppet/parser/functions/dirname.rb": "bef7214eb89db3eb8f7ee5fc9dca0233",
          "lib/puppet/parser/functions/validate_hash.rb": "e9cfaca68751524efe16ecf2f958a9a0",
          "lib/puppet/parser/functions/join_keys_to_values.rb": "f29da49531228f6ca5b3aa0df00a14c2",
          "spec/unit/puppet/parser/functions/delete_spec.rb": "0d84186ea618523b4b2a4ca0b5a09c9e",
          "lib/puppet/parser/functions/validate_string.rb": "6afcbc51f83f0714348b8d61e06ea7eb",
          "spec/unit/puppet/parser/functions/rstrip_spec.rb": "a408e933753c9c323a05d7079d32cbb3",
          "spec/unit/puppet/parser/functions/fqdn_rotate_spec.rb": "c67b71737bee9936f5261d41a37bad46",
          "spec/unit/puppet/parser/functions/concat_spec.rb": "c21aaa84609f92290d5ffb2ce8ea4bf5",
          "lib/puppet/parser/functions/unique.rb": "217ccce6d23235af92923f50f8556963",
          "CHANGELOG": "344383410cb78409f0c59ecf38e8c21a",
          "lib/puppet/parser/functions/member.rb": "541e67d06bc4155e79b00843a125e9bc",
          "spec/unit/puppet/parser/functions/validate_string_spec.rb": "64a4f681084cba55775a070f7fab5e0c",
          "lib/facter/puppet_vardir.rb": "c7ddc97e8a84ded3dd93baa5b9b3283d",
          "lib/puppet/parser/functions/pick.rb": "2bede116a0651405c47e650bbf942abe",
          "spec/unit/puppet/parser/functions/parseyaml_spec.rb": "65dfed872930ffe0d21954c15daaf498",
          "lib/puppet/parser/functions/delete_at.rb": "6bc24b79390d463d8be95396c963381a",
          "lib/puppet/parser/functions/zip.rb": "a80782461ed9465f0cd0c010936f1855",
          "tests/file_line.pp": "67727539aa7b7dd76f06626fe734f7f7",
          "lib/puppet/parser/functions/ensure_resource.rb": "3f68b8e17a16bfd01455cd73f8e324ba",
          "lib/puppet/parser/functions/num2bool.rb": "605c12fa518c87ed2c66ae153e0686ce",
          "spec/unit/puppet/parser/functions/grep_spec.rb": "78179537496a7150469e591a95e255d8",
          "lib/puppet/parser/functions/keys.rb": "eb6ac815ea14fbf423580ed903ef7bad",
          "spec/unit/puppet/parser/functions/num2bool_spec.rb": "8cd5b46b7c8e612dfae3362e3a68a5f9",
          "lib/puppet/parser/functions/parsejson.rb": "e7f968c34928107b84cd0860daf50ab1",
          "lib/puppet/parser/functions/is_mac_address.rb": "288bd4b38d4df42a83681f13e7eaaee0",
          "lib/puppet/parser/functions/join.rb": "b28087823456ca5cf943de4a233ac77f",
          "spec/unit/puppet/parser/functions/type_spec.rb": "422f2c33458fe9b0cc9614d16f7573ba",
          "lib/puppet/parser/functions/downcase.rb": "9204a04c2a168375a38d502db8811bbe",
          "spec/unit/puppet/parser/functions/validate_augeas_spec.rb": "1d5bcfbf97dc56b45734248a14358d4f",
          "spec/unit/puppet/parser/functions/has_ip_address_spec.rb": "f53c7baeaf024ff577447f6c28c0f3a7",
          "lib/puppet/parser/functions/is_function_available.rb": "88c63869cb5df3402bc9756a8d40c16d",
          "lib/puppet/parser/functions/prefix.rb": "21fd6a2c1ee8370964346b3bfe829d2b",
          "spec/watchr.rb": "b588ddf9ef1c19ab97aa892cc776da73",
          "spec/unit/puppet/parser/functions/has_key_spec.rb": "3e4e730d98bbdfb88438b6e08e45868e",
          "lib/puppet/parser/functions/values_at.rb": "094ac110ce9f7a5b16d0c80a0cf2243c",
          "lib/puppet/parser/functions/fqdn_rotate.rb": "20743a138c56fc806a35cb7b60137dbc",
          "lib/puppet/parser/functions/rstrip.rb": "8a0d69876bdbc88a2054ba41c9c38961",
          "spec/unit/puppet/parser/functions/validate_slength_spec.rb": "a1b4d805149dc0143e9a57e43e1f84bf",
          "spec/functions/ensure_packages_spec.rb": "935b4aec5ab36bdd0458c1a9b2a93ad5",
          "lib/puppet/parser/functions/suffix.rb": "109279db4180441e75545dbd5f273298",
          "lib/puppet/parser/functions/str2saltedsha512.rb": "49afad7b386be38ce53deaefef326e85",
          "spec/unit/puppet/parser/functions/count_spec.rb": "db98ef89752a7112425f0aade10108e0",
          "lib/puppet/parser/functions/hash.rb": "9d072527dfc7354b69292e9302906530",
          "manifests/stages.pp": "cc6ed1751d334b0ea278c0335c7f0b5a",
          "spec/unit/puppet/parser/functions/is_ip_address_spec.rb": "6040a9bae4e5c853966148b634501157",
          "spec/unit/facter/pe_version_spec.rb": "ef031cca838f36f99b1dab3259df96a5",
          "spec/unit/puppet/parser/functions/get_module_path_spec.rb": "b7ea196f548b1a9a745ab6671295ab27",
          "lib/puppet/parser/functions/is_integer.rb": "a50ebc15c30bffd759e4a6f8ec6a0cf3",
          "lib/puppet/parser/functions/reverse.rb": "1386371c0f5301055fdf99079e862b3e",
          "spec/unit/puppet/parser/functions/has_interface_with_spec.rb": "7c16d731c518b434c81b8cb2227cc916",
          "README_SPECS.markdown": "82bb4c6abbb711f40778b162ec0070c1",
          "spec/unit/puppet/parser/functions/is_domain_name_spec.rb": "8eed3a9eb9334bf6a473ad4e2cabc2ec",
          "spec/unit/puppet/parser/functions/join_spec.rb": "c3b50c39390a86b493511be2c6722235",
          "lib/puppet/parser/functions/chomp.rb": "719d46923d75251f7b6b68b6e015cccc",
          "lib/puppet/parser/functions/is_string.rb": "2bd9a652bbb2668323eee6c57729ff64",
          "spec/unit/puppet/parser/functions/is_array_spec.rb": "8c020af9c360abdbbf1ba887bb26babe",
          "Modulefile": "351bba73290cd526ca7bacd4c7d250dc",
          "spec/unit/puppet/parser/functions/reject_spec.rb": "8e16c9f064870e958b6278261e480954",
          "spec/unit/puppet/type/file_line_spec.rb": "d9f4e08e8b98e565a07f1b995593fa89",
          "spec/unit/puppet/parser/functions/lstrip_spec.rb": "1fc2c2d80b5f724a358c3cfeeaae6249",
          "lib/puppet/parser/functions/type.rb": "62f914d6c90662aaae40c5539701be60",
          "lib/puppet/parser/functions/shuffle.rb": "6445e6b4dc62c37b184a60eeaf34414b",
          "lib/puppet/parser/functions/has_key.rb": "7cd9728c38f0b0065f832dabd62b0e7e",
          "lib/puppet/parser/functions/concat.rb": "f28a09811ff4d19bb5e7a540e767d65c",
          "spec/unit/puppet/parser/functions/capitalize_spec.rb": "82a4209a033fc88c624f708c12e64e2a",
          "tests/init.pp": "1d98070412c76824e66db4b7eb74d433",
          "lib/puppet/provider/file_line/ruby.rb": "a445a57f9b884037320ea37307dbc92b",
          "tests/has_ip_address.pp": "93ce02915f67ddfb43a049b2b84ef391",
          "spec/unit/puppet/parser/functions/min_spec.rb": "bf80bf58261117bb24392670b624a611",
          "lib/puppet/parser/functions/to_bytes.rb": "83f23c33adbfa42b2a9d9fc2db3daeb4",
          "lib/puppet/parser/functions/sort.rb": "504b033b438461ca4f9764feeb017833",
          "lib/puppet/parser/functions/capitalize.rb": "14481fc8c7c83fe002066ebcf6722f17",
          "lib/puppet/type/file_line.rb": "3e8222cb58f3503b3ea7de3647c602a0",
          "lib/puppet/parser/functions/has_interface_with.rb": "8d3ebca805dc6edb88b6b7a13d404787",
          "spec/functions/getparam_spec.rb": "122f37cf9ec7489f1dae10db39c871b5",
          "Rakefile": "f37e6131fe7de9a49b09d31596f5fbf1",
          "spec/unit/puppet/parser/functions/downcase_spec.rb": "b0197829512f2e92a2d2b06ce8e2226f",
          "spec/unit/puppet/parser/functions/max_spec.rb": "5562bccc643443af7e4fa7c9d1e52b8b",
          "lib/puppet/parser/functions/validate_absolute_path.rb": "385137ac24a2dec6cecc4e6ea75be442",
          "spec/unit/puppet/parser/functions/getvar_spec.rb": "842bf88d47077a9ae64097b6e39c3364",
          "spec/unit/puppet/parser/functions/sort_spec.rb": "7039cd230a94e95d9d1de2e1094acae2",
          "spec/unit/puppet/parser/functions/strftime_spec.rb": "bf140883ecf3254277306fa5b25f0344",
          "spec/unit/puppet/parser/functions/is_mac_address_spec.rb": "644cd498b426ff2f9ea9cbc5d8e141d7",
          "spec/unit/puppet/parser/functions/empty_spec.rb": "028c30267d648a172d8a81a9262c3abe",
          "lib/puppet/parser/functions/is_domain_name.rb": "fba9f855df3bbf90d72dfd5201f65d2b",
          "lib/puppet/parser/functions/get_module_path.rb": "d4bf50da25c0b98d26b75354fa1bcc45",
          "spec/unit/puppet/provider/file_line/ruby_spec.rb": "e8cd7432739cb212d40a9148523bd4d7",
          "spec/unit/puppet/parser/functions/reverse_spec.rb": "48169990e59081ccbd112b6703418ce4",
          "spec/unit/puppet/parser/functions/str2saltedsha512_spec.rb": "1de174be8835ba6fef86b590887bb2cc",
          "spec/unit/puppet/parser/functions/prefix_spec.rb": "16a95b321d76e773812693c80edfbe36",
          "spec/spec.opts": "a600ded995d948e393fbe2320ba8e51c",
          "spec/monkey_patches/alias_should_to_must.rb": "7cd4065c63f06f1ab3aaa1c5f92af947",
          "lib/puppet/parser/functions/uriescape.rb": "9ebc34f1b2f319626512b8cd7cde604c",
          "lib/puppet/parser/functions/floor.rb": "c5a960e9714810ebb99198ff81a11a3b",
          "lib/puppet/parser/functions/empty.rb": "ae92905c9d94ddca30bf56b7b1dabedf",
          "spec/unit/puppet/parser/functions/range_spec.rb": "91d69115dea43f62a2dca9a10467d836",
          "tests/has_interface_with.pp": "59c98b4af0d39fc11d1ef4c7a6dc8f7a",
          "spec/unit/puppet/parser/functions/is_function_available.rb": "069ef7490eba66424cab75444f36828a",
          "README_DEVELOPER.markdown": "220a8b28521b5c5d2ea87c4ddb511165",
          "spec/unit/puppet/parser/functions/flatten_spec.rb": "583c9a70f93e492cfb22ffa1811f6aa0",
          "lib/puppet/parser/functions/upcase.rb": "a5744a74577cfa136fca2835e75888d3",
          "lib/puppet/parser/functions/str2bool.rb": "c822a8944747f5624b13f2da0df8db21",
          "lib/puppet/parser/functions/is_hash.rb": "8c7d9a05084dab0389d1b779c8a05b1a",
          "lib/puppet/parser/functions/abs.rb": "32161bd0435fdfc2aec2fc559d2b454b",
          "spec/unit/puppet/parser/functions/validate_hash_spec.rb": "8529c74051ceb71e6b1b97c9cecdf625",
          "spec/unit/puppet/parser/functions/member_spec.rb": "067c60985efc57022ca1c5508d74d77f",
          "README.markdown": "b63097a958f22abf7999d475a6a4d32a",
          "spec/unit/puppet/parser/functions/values_spec.rb": "0ac9e141ed1f612d7cc224f747b2d1d9",
          "lib/puppet/parser/functions/validate_cmd.rb": "0319a15d24fd077ebabc2f79969f6ab5",
          "lib/puppet/parser/functions/is_float.rb": "f1b0d333061d31bf0c25bd4c33dc134b",
          "lib/puppet/parser/functions/bool2num.rb": "8e627eee990e811e35e7e838c586bd77",
          "lib/puppet/parser/functions/validate_bool.rb": "4ddffdf5954b15863d18f392950b88f4",
          "lib/puppet/parser/functions/grep.rb": "5682995af458b05f3b53dd794c4bf896",
          "spec/unit/puppet/parser/functions/upcase_spec.rb": "813668919bc62cdd1d349dafc19fbbb3",
          "spec/unit/puppet/parser/functions/parsejson_spec.rb": "37ab84381e035c31d6a3dd9bf73a3d53",
          "spec/unit/puppet/parser/functions/squeeze_spec.rb": "df5b349c208a9a2a4d4b8e6d9324756f",
          "spec/unit/puppet/parser/functions/validate_absolute_path_spec.rb": "07839082d24d5a7628fd5bce6c8b35c3",
          "spec/unit/puppet/parser/functions/chop_spec.rb": "4e9534d25b952b261c9f46add677c390",
          "lib/puppet/parser/functions/squeeze.rb": "541f85b4203b55c9931d3d6ecd5c75f8",
          "lib/puppet/parser/functions/lstrip.rb": "210b103f78622e099f91cc2956b6f741",
          "spec/unit/puppet/type/anchor_spec.rb": "a5478a72a7fab2d215f39982a9230c18",
          "lib/facter/pe_version.rb": "4a9353952963b011759f3e6652a10da5",
          "spec/unit/puppet/parser/functions/hash_spec.rb": "826337a92d8f7a189b7ac19615db0ed7",
          "spec/unit/puppet/parser/functions/floor_spec.rb": "d01ef7dfe0245d7a0a73d7df13cb02e3",
          "spec/unit/puppet/parser/functions/time_spec.rb": "b6d0279062779efe5153fe5cfafc5bbd",
          "spec/unit/puppet/parser/functions/swapcase_spec.rb": "0660ce8807608cc8f98ad1edfa76a402",
          "lib/puppet/parser/functions/validate_array.rb": "72b29289b8af1cfc3662ef9be78911b8",
          "lib/puppet/parser/functions/is_ip_address.rb": "a714a736c1560e8739aaacd9030cca00",
          "lib/puppet/parser/functions/getvar.rb": "10bf744212947bc6a7bfd2c9836dbd23",
          "RELEASE_PROCESS.markdown": "94b92bc99ac4106ba1a74d5c04e520f9",
          "spec/classes/anchor_spec.rb": "695d65275c3ac310d7fa23b91f8bbb4a",
          "lib/puppet/parser/functions/any2array.rb": "a81e71d6b67a551d38770ba9a1948a75",
          "spec/functions/defined_with_params_spec.rb": "3bdfac38e3d6f06140ff2e926f4ebed2",
          "spec/unit/puppet/parser/functions/pick_spec.rb": "aba6247d3925e373272fca6768fd5403",
          "spec/unit/puppet/parser/functions/to_bytes_spec.rb": "80aaf68cf7e938e46b5278c1907af6be",
          "spec/unit/puppet/parser/functions/is_string_spec.rb": "5c015d8267de852da3a12b984e077092",
          "spec/unit/puppet/parser/functions/abs_spec.rb": "0a5864a29a8e9e99acc483268bd5917c",
          "spec/unit/facter/util/puppet_settings_spec.rb": "345bcbef720458e25be0190b7638e4d9",
          "spec/unit/puppet/parser/functions/zip_spec.rb": "06a86e4e70d2aea63812582aae1d26c4",
          "spec/unit/puppet/parser/functions/dirname_spec.rb": "1d7cf70468c2cfa6dacfc75935322395",
          "spec/unit/puppet/parser/functions/delete_at_spec.rb": "5a4287356b5bd36a6e4c100421215b8e",
          "spec/unit/puppet/parser/functions/chomp_spec.rb": "3cd8e2fe6b12efeffad94cce5b693b7c",
          "spec/unit/puppet/parser/functions/join_keys_to_values_spec.rb": "7c7937411b7fe4bb944c0c022d3a96b0",
          "lib/puppet/parser/functions/range.rb": "033048bba333fe429e77e0f2e91db25f",
          "lib/puppet/parser/functions/parseyaml.rb": "00f10ec1e2b050e23d80c256061ebdd7",
          "spec/unit/puppet/parser/functions/is_numeric_spec.rb": "5f08148803b6088c27b211c446ad3658",
          "spec/unit/puppet/parser/functions/has_ip_network_spec.rb": "885ea8a4c987b735d683b742bf846cb1",
          "lib/puppet/parser/functions/min.rb": "0d2a1b7e735ab251c5469e735fa3f4c6",
          "CONTRIBUTING.md": "fdddc4606dc3b6949e981e6bf50bc8e5"
        },
        "version": "4.1.0",
        "description": "Standard Library for Puppet Modules",
        "source": "git://github.com/puppetlabs/puppetlabs-stdlib.git",
        "project_page": "https://github.com/puppetlabs/puppetlabs-stdlib",
        "summary": "Puppet Module Standard Library",
        "dependencies": [

        ],
        "author": "puppetlabs",
        "name": "puppetlabs-stdlib"
      },
      "tags": [
        "puppetlabs",
        "library",
        "stdlib",
        "standard",
        "stages"
      ],
      "supported": false,
      "validation_score": 82,
      "file_uri": "/v3/files/puppetlabs-stdlib-4.1.0.tar.gz",
      "file_size": 67586,
      "file_md5": "bbf919d7ee9d278d2facf39c25578bf8",
      "downloads": 1278193,
      "readme": "# Puppet Labs Standard Library #\n\n[![Build Status](https://travis-ci.org/puppetlabs/puppetlabs-stdlib.png?branch=master)](https://travis-ci.org/puppetlabs/puppetlabs-stdlib)\n\nThis module provides a \"standard library\" of resources for developing Puppet\nModules.  This modules will include the following additions to Puppet\n\n * Stages\n * Facts\n * Functions\n * Defined resource types\n * Types\n * Providers\n\nThis module is officially curated and provided by Puppet Labs.  The modules\nPuppet Labs writes and distributes will make heavy use of this standard\nlibrary.\n\nTo report or research a bug with any part of this module, please go to\n[http://projects.puppetlabs.com/projects/stdlib](http://projects.puppetlabs.com/projects/stdlib)\n\n# Versions #\n\nThis module follows semver.org (v1.0.0) versioning guidelines.  The standard\nlibrary module is released as part of [Puppet\nEnterprise](http://puppetlabs.com/puppet/puppet-enterprise/) and as a result\nolder versions of Puppet Enterprise that Puppet Labs still supports will have\nbugfix maintenance branches periodically \"merged up\" into master.  The current\nlist of integration branches are:\n\n * v2.1.x (v2.1.1 released in PE 1)\n * v2.2.x (Never released as part of PE, only to the Forge)\n * v2.3.x (Released in PE 2)\n * v3.0.x (Never released as part of PE, only to the Forge)\n * v4.0.x (Drops support for Puppet 2.7)\n * master (mainline development branch)\n\nThe first Puppet Enterprise version including the stdlib module is Puppet\nEnterprise 1.2.\n\n# Compatibility #\n\nPuppet Versions | < 2.6 | 2.6 | 2.7 | 3.x |\n:---------------|:-----:|:---:|:---:|:----:\n**stdlib 2.x**  | no    | **yes** | **yes** | no\n**stdlib 3.x**  | no    | no  | **yes** | **yes**\n**stdlib 4.x**  | no    | no  | no  | **yes**\n\nThe stdlib module does not work with Puppet versions released prior to Puppet\n2.6.0.\n\n## stdlib 2.x ##\n\nAll stdlib releases in the 2.0 major version support Puppet 2.6 and Puppet 2.7.\n\n## stdlib 3.x ##\n\nThe 3.0 major release of stdlib drops support for Puppet 2.6.  Stdlib 3.x\nsupports Puppet 2 and Puppet 3.\n\n## stdlib 4.x ##\n\nThe 4.0 major release of stdlib drops support for Puppet 2.7.  Stdlib 4.x\nsupports Puppet 3.  Notably, ruby 1.8.5 is no longer supported though ruby\n1.8.7, 1.9.3, and 2.0.0 are fully supported.\n\n# Functions #\n\nabs\n---\nReturns the absolute value of a number, for example -34.56 becomes\n34.56. Takes a single integer and float value as an argument.\n\n\n- *Type*: rvalue\n\nany2array\n---------\nThis converts any object to an array containing that object. Empty argument\nlists are converted to an empty array. Arrays are left untouched. Hashes are\nconverted to arrays of alternating keys and values.\n\n\n- *Type*: rvalue\n\nbool2num\n--------\nConverts a boolean to a number. Converts the values:\nfalse, f, 0, n, and no to 0\ntrue, t, 1, y, and yes to 1\n    Requires a single boolean or string as an input.\n\n\n- *Type*: rvalue\n\ncapitalize\n----------\nCapitalizes the first letter of a string or array of strings.\nRequires either a single string or an array as an input.\n\n\n- *Type*: rvalue\n\nchomp\n-----\nRemoves the record separator from the end of a string or an array of\nstrings, for example `hello\\n` becomes `hello`.\nRequires a single string or array as an input.\n\n\n- *Type*: rvalue\n\nchop\n----\nReturns a new string with the last character removed. If the string ends\nwith `\\r\\n`, both characters are removed. Applying chop to an empty\nstring returns an empty string. If you wish to merely remove record\nseparators then you should use the `chomp` function.\nRequires a string or array of strings as input.\n\n\n- *Type*: rvalue\n\nconcat\n------\nAppends the contents of array 2 onto array 1.\n\n*Example:*\n\n    concat(['1','2','3'],['4','5','6'])\n\nWould result in:\n\n  ['1','2','3','4','5','6']\n\n\n- *Type*: rvalue\n\ncount\n-----\nTakes an array as first argument and an optional second argument.\nCount the number of elements in array that matches second argument.\nIf called with only an array it counts the number of elements that are not nil/undef.\n\n\n- *Type*: rvalue\n\ndefined_with_params\n-------------------\nTakes a resource reference and an optional hash of attributes.\n\nReturns true if a resource with the specified attributes has already been added\nto the catalog, and false otherwise.\n\n    user { 'dan':\n      ensure => present,\n    }\n\n    if ! defined_with_params(User[dan], {'ensure' => 'present' }) {\n      user { 'dan': ensure => present, }\n    }\n\n\n- *Type*: rvalue\n\ndelete\n------\nDeletes all instances of a given element from an array, substring from a\nstring, or key from a hash.\n\n*Examples:*\n\n    delete(['a','b','c','b'], 'b')\n    Would return: ['a','c']\n\n    delete({'a'=>1,'b'=>2,'c'=>3}, 'b')\n    Would return: {'a'=>1,'c'=>3}\n\n    delete('abracadabra', 'bra')\n    Would return: 'acada'\n\n\n- *Type*: rvalue\n\ndelete_at\n---------\nDeletes a determined indexed value from an array.\n\n*Examples:*\n\n    delete_at(['a','b','c'], 1)\n\nWould return: ['a','c']\n\n\n- *Type*: rvalue\n\ndirname\n-------\nReturns the `dirname` of a path.\n\n*Examples:*\n\n    dirname('/path/to/a/file.ext')\n\nWould return: '/path/to/a'\n\ndowncase\n--------\nConverts the case of a string or all strings in an array to lower case.\n\n\n- *Type*: rvalue\n\nempty\n-----\nReturns true if the variable is empty.\n\n\n- *Type*: rvalue\n\nensure_packages\n---------------\nTakes a list of packages and only installs them if they don't already exist.\n\n\n- *Type*: statement\n\nensure_resource\n---------------\nTakes a resource type, title, and a list of attributes that describe a\nresource.\n\n    user { 'dan':\n      ensure => present,\n    }\n\nThis example only creates the resource if it does not already exist:\n\n    ensure_resource('user, 'dan', {'ensure' => 'present' })\n\nIf the resource already exists but does not match the specified parameters,\nthis function will attempt to recreate the resource leading to a duplicate\nresource definition error.\n\nAn array of resources can also be passed in and each will be created with\nthe type and parameters specified if it doesn't already exist.\n\n    ensure_resource('user', ['dan','alex'], {'ensure' => 'present'})\n\n\n\n- *Type*: statement\n\nflatten\n-------\nThis function flattens any deeply nested arrays and returns a single flat array\nas a result.\n\n*Examples:*\n\n    flatten(['a', ['b', ['c']]])\n\nWould return: ['a','b','c']\n\n\n- *Type*: rvalue\n\nfloor\n-----\nReturns the largest integer less or equal to the argument.\nTakes a single numeric value as an argument.\n\n\n- *Type*: rvalue\n\nfqdn_rotate\n-----------\nRotates an array a random number of times based on a nodes fqdn.\n\n\n- *Type*: rvalue\n\nget_module_path\n---------------\nReturns the absolute path of the specified module for the current\nenvironment.\n\nExample:\n  $module_path = get_module_path('stdlib')\n\n\n- *Type*: rvalue\n\ngetparam\n--------\nTakes a resource reference and name of the parameter and\nreturns value of resource's parameter.\n\n*Examples:*\n\n    define example_resource($param) {\n    }\n\n    example_resource { \"example_resource_instance\":\n        param => \"param_value\"\n    }\n\n    getparam(Example_resource[\"example_resource_instance\"], \"param\")\n\nWould return: param_value\n\n\n- *Type*: rvalue\n\ngetvar\n------\nLookup a variable in a remote namespace.\n\nFor example:\n\n    $foo = getvar('site::data::foo')\n    # Equivalent to $foo = $site::data::foo\n\nThis is useful if the namespace itself is stored in a string:\n\n    $datalocation = 'site::data'\n    $bar = getvar(\"${datalocation}::bar\")\n    # Equivalent to $bar = $site::data::bar\n\n\n- *Type*: rvalue\n\ngrep\n----\nThis function searches through an array and returns any elements that match\nthe provided regular expression.\n\n*Examples:*\n\n    grep(['aaa','bbb','ccc','aaaddd'], 'aaa')\n\nWould return:\n\n    ['aaa','aaaddd']\n\n\n- *Type*: rvalue\n\nhas_interface_with\n------------------\nReturns boolean based on kind and value:\n* macaddress\n* netmask\n* ipaddress\n* network\n\nhas_interface_with(\"macaddress\", \"x:x:x:x:x:x\")\nhas_interface_with(\"ipaddress\", \"127.0.0.1\")    => true\netc.\n\nIf no \"kind\" is given, then the presence of the interface is checked:\nhas_interface_with(\"lo\")                        => true\n\n\n- *Type*: rvalue\n\nhas_ip_address\n--------------\nReturns true if the client has the requested IP address on some interface.\n\nThis function iterates through the 'interfaces' fact and checks the\n'ipaddress_IFACE' facts, performing a simple string comparison.\n\n\n- *Type*: rvalue\n\nhas_ip_network\n--------------\nReturns true if the client has an IP address within the requested network.\n\nThis function iterates through the 'interfaces' fact and checks the\n'network_IFACE' facts, performing a simple string comparision.\n\n\n- *Type*: rvalue\n\nhas_key\n-------\nDetermine if a hash has a certain key value.\n\nExample:\n\n    $my_hash = {'key_one' => 'value_one'}\n    if has_key($my_hash, 'key_two') {\n      notice('we will not reach here')\n    }\n    if has_key($my_hash, 'key_one') {\n      notice('this will be printed')\n    }\n\n\n\n- *Type*: rvalue\n\nhash\n----\nThis function converts an array into a hash.\n\n*Examples:*\n\n    hash(['a',1,'b',2,'c',3])\n\nWould return: {'a'=>1,'b'=>2,'c'=>3}\n\n\n- *Type*: rvalue\n\nis_array\n--------\nReturns true if the variable passed to this function is an array.\n\n- *Type*: rvalue\n\nis_domain_name\n--------------\nReturns true if the string passed to this function is a syntactically correct domain name.\n\n- *Type*: rvalue\n\nis_float\n--------\nReturns true if the variable passed to this function is a float.\n\n- *Type*: rvalue\n\nis_function_available\n---------------------\nThis function accepts a string as an argument, determines whether the\nPuppet runtime has access to a function by that name.  It returns a\ntrue if the function exists, false if not.\n\n- *Type*: rvalue\n\nis_hash\n-------\nReturns true if the variable passed to this function is a hash.\n\n- *Type*: rvalue\n\nis_integer\n----------\nReturns true if the variable returned to this string is an integer.\n\n- *Type*: rvalue\n\nis_ip_address\n-------------\nReturns true if the string passed to this function is a valid IP address.\n\n- *Type*: rvalue\n\nis_mac_address\n--------------\nReturns true if the string passed to this function is a valid mac address.\n\n- *Type*: rvalue\n\nis_numeric\n----------\nReturns true if the variable passed to this function is a number.\n\n- *Type*: rvalue\n\nis_string\n---------\nReturns true if the variable passed to this function is a string.\n\n- *Type*: rvalue\n\njoin\n----\nThis function joins an array into a string using a seperator.\n\n*Examples:*\n\n    join(['a','b','c'], \",\")\n\nWould result in: \"a,b,c\"\n\n- *Type*: rvalue\n\njoin_keys_to_values\n-------------------\nThis function joins each key of a hash to that key's corresponding value with a\nseparator. Keys and values are cast to strings. The return value is an array in\nwhich each element is one joined key/value pair.\n\n*Examples:*\n\n    join_keys_to_values({'a'=>1,'b'=>2}, \" is \")\n\nWould result in: [\"a is 1\",\"b is 2\"]\n\n- *Type*: rvalue\n\nkeys\n----\nReturns the keys of a hash as an array.\n\n- *Type*: rvalue\n\nloadyaml\n--------\nLoad a YAML file containing an array, string, or hash, and return the data\nin the corresponding native data type.\n\nFor example:\n\n    $myhash = loadyaml('/etc/puppet/data/myhash.yaml')\n\n\n- *Type*: rvalue\n\nlstrip\n------\nStrips leading spaces to the left of a string.\n\n- *Type*: rvalue\n\nmax\n---\nReturns the highest value of all arguments.\nRequires at least one argument.\n\n- *Type*: rvalue\n\nmember\n------\nThis function determines if a variable is a member of an array.\n\n*Examples:*\n\n    member(['a','b'], 'b')\n\nWould return: true\n\n    member(['a','b'], 'c')\n\nWould return: false\n\n- *Type*: rvalue\n\nmerge\n-----\nMerges two or more hashes together and returns the resulting hash.\n\nFor example:\n\n    $hash1 = {'one' => 1, 'two', => 2}\n    $hash2 = {'two' => 'dos', 'three', => 'tres'}\n    $merged_hash = merge($hash1, $hash2)\n    # The resulting hash is equivalent to:\n    # $merged_hash =  {'one' => 1, 'two' => 'dos', 'three' => 'tres'}\n\nWhen there is a duplicate key, the key in the rightmost hash will \"win.\"\n\n- *Type*: rvalue\n\nmin\n---\nReturns the lowest value of all arguments.\nRequires at least one argument.\n\n- *Type*: rvalue\n\nnum2bool\n--------\nThis function converts a number or a string representation of a number into a\ntrue boolean. Zero or anything non-numeric becomes false. Numbers higher then 0\nbecome true.\n\n- *Type*: rvalue\n\nparsejson\n---------\nThis function accepts JSON as a string and converts into the correct Puppet\nstructure.\n\n- *Type*: rvalue\n\nparseyaml\n---------\nThis function accepts YAML as a string and converts it into the correct\nPuppet structure.\n\n- *Type*: rvalue\n\npick\n----\nThis function is similar to a coalesce function in SQL in that it will return\nthe first value in a list of values that is not undefined or an empty string\n(two things in Puppet that will return a boolean false value). Typically,\nthis function is used to check for a value in the Puppet Dashboard/Enterprise\nConsole, and failover to a default value like the following:\n\n    $real_jenkins_version = pick($::jenkins_version, '1.449')\n\nThe value of $real_jenkins_version will first look for a top-scope variable\ncalled 'jenkins_version' (note that parameters set in the Puppet Dashboard/\nEnterprise Console are brought into Puppet as top-scope variables), and,\nfailing that, will use a default value of 1.449.\n\n- *Type*: rvalue\n\nprefix\n------\nThis function applies a prefix to all elements in an array.\n\n*Examples:*\n\n    prefix(['a','b','c'], 'p')\n\nWill return: ['pa','pb','pc']\n\n- *Type*: rvalue\n\nrange\n-----\nWhen given range in the form of (start, stop) it will extrapolate a range as\nan array.\n\n*Examples:*\n\n    range(\"0\", \"9\")\n\nWill return: [0,1,2,3,4,5,6,7,8,9]\n\n    range(\"00\", \"09\")\n\nWill return: [0,1,2,3,4,5,6,7,8,9] (Zero padded strings are converted to\nintegers automatically)\n\n    range(\"a\", \"c\")\n\nWill return: [\"a\",\"b\",\"c\"]\n\n    range(\"host01\", \"host10\")\n\nWill return: [\"host01\", \"host02\", ..., \"host09\", \"host10\"]\n\n- *Type*: rvalue\n\nreject\n------\nThis function searches through an array and rejects all elements that match\nthe provided regular expression.\n\n*Examples:*\n\n    reject(['aaa','bbb','ccc','aaaddd'], 'aaa')\n\nWould return:\n\n    ['bbb','ccc']\n\n\n- *Type*: rvalue\n\nreverse\n-------\nReverses the order of a string or array.\n\n- *Type*: rvalue\n\nrstrip\n------\nStrips leading spaces to the right of the string.\n\n- *Type*: rvalue\n\nshuffle\n-------\nRandomizes the order of a string or array elements.\n\n- *Type*: rvalue\n\nsize\n----\nReturns the number of elements in a string or array.\n\n- *Type*: rvalue\n\nsort\n----\nSorts strings and arrays lexically.\n\n- *Type*: rvalue\n\nsqueeze\n-------\nReturns a new string where runs of the same character that occur in this set\nare replaced by a single character.\n\n- *Type*: rvalue\n\nstr2bool\n--------\nThis converts a string to a boolean. This attempt to convert strings that\ncontain things like: y, 1, t, true to 'true' and strings that contain things\nlike: 0, f, n, false, no to 'false'.\n\n\n- *Type*: rvalue\n\nstr2saltedsha512\n----------------\nThis converts a string to a salted-SHA512 password hash (which is used for\nOS X versions >= 10.7). Given any simple string, you will get a hex version\nof a salted-SHA512 password hash that can be inserted into your Puppet\nmanifests as a valid password attribute.\n\n\n- *Type*: rvalue\n\nstrftime\n--------\nThis function returns formatted time.\n\n*Examples:*\n\nTo return the time since epoch:\n\n    strftime(\"%s\")\n\nTo return the date:\n\n    strftime(\"%Y-%m-%d\")\n\n*Format meaning:*\n\n    %a - The abbreviated weekday name (``Sun'')\n    %A - The  full  weekday  name (``Sunday'')\n    %b - The abbreviated month name (``Jan'')\n    %B - The  full  month  name (``January'')\n    %c - The preferred local date and time representation\n    %C - Century (20 in 2009)\n    %d - Day of the month (01..31)\n    %D - Date (%m/%d/%y)\n    %e - Day of the month, blank-padded ( 1..31)\n    %F - Equivalent to %Y-%m-%d (the ISO 8601 date format)\n    %h - Equivalent to %b\n    %H - Hour of the day, 24-hour clock (00..23)\n    %I - Hour of the day, 12-hour clock (01..12)\n    %j - Day of the year (001..366)\n    %k - hour, 24-hour clock, blank-padded ( 0..23)\n    %l - hour, 12-hour clock, blank-padded ( 0..12)\n    %L - Millisecond of the second (000..999)\n    %m - Month of the year (01..12)\n    %M - Minute of the hour (00..59)\n    %n - Newline (\n)\n    %N - Fractional seconds digits, default is 9 digits (nanosecond)\n            %3N  millisecond (3 digits)\n            %6N  microsecond (6 digits)\n            %9N  nanosecond (9 digits)\n    %p - Meridian indicator (``AM''  or  ``PM'')\n    %P - Meridian indicator (``am''  or  ``pm'')\n    %r - time, 12-hour (same as %I:%M:%S %p)\n    %R - time, 24-hour (%H:%M)\n    %s - Number of seconds since 1970-01-01 00:00:00 UTC.\n    %S - Second of the minute (00..60)\n    %t - Tab character (\t)\n    %T - time, 24-hour (%H:%M:%S)\n    %u - Day of the week as a decimal, Monday being 1. (1..7)\n    %U - Week  number  of the current year,\n            starting with the first Sunday as the first\n            day of the first week (00..53)\n    %v - VMS date (%e-%b-%Y)\n    %V - Week number of year according to ISO 8601 (01..53)\n    %W - Week  number  of the current year,\n            starting with the first Monday as the first\n            day of the first week (00..53)\n    %w - Day of the week (Sunday is 0, 0..6)\n    %x - Preferred representation for the date alone, no time\n    %X - Preferred representation for the time alone, no date\n    %y - Year without a century (00..99)\n    %Y - Year with century\n    %z - Time zone as  hour offset from UTC (e.g. +0900)\n    %Z - Time zone name\n    %% - Literal ``%'' character\n\n\n- *Type*: rvalue\n\nstrip\n-----\nThis function removes leading and trailing whitespace from a string or from\nevery string inside an array.\n\n*Examples:*\n\n    strip(\"    aaa   \")\n\nWould result in: \"aaa\"\n\n\n- *Type*: rvalue\n\nsuffix\n------\nThis function applies a suffix to all elements in an array.\n\n*Examples:*\n\n    suffix(['a','b','c'], 'p')\n\nWill return: ['ap','bp','cp']\n\n\n- *Type*: rvalue\n\nswapcase\n--------\nThis function will swap the existing case of a string.\n\n*Examples:*\n\n    swapcase(\"aBcD\")\n\nWould result in: \"AbCd\"\n\n\n- *Type*: rvalue\n\ntime\n----\nThis function will return the current time since epoch as an integer.\n\n*Examples:*\n\n    time()\n\nWill return something like: 1311972653\n\n\n- *Type*: rvalue\n\nto_bytes\n--------\nConverts the argument into bytes, for example 4 kB becomes 4096.\nTakes a single string value as an argument.\n\n\n- *Type*: rvalue\n\ntype\n----\nReturns the type when passed a variable. Type can be one of:\n\n* string\n* array\n* hash\n* float\n* integer\n* boolean\n\n\n- *Type*: rvalue\n\nunique\n------\nThis function will remove duplicates from strings and arrays.\n\n*Examples:*\n\n    unique(\"aabbcc\")\n\nWill return:\n\n    abc\n\nYou can also use this with arrays:\n\n    unique([\"a\",\"a\",\"b\",\"b\",\"c\",\"c\"])\n\nThis returns:\n\n    [\"a\",\"b\",\"c\"]\n\n\n- *Type*: rvalue\n\nupcase\n------\nConverts a string or an array of strings to uppercase.\n\n*Examples:*\n\n    upcase(\"abcd\")\n\nWill return:\n\n    ASDF\n\n\n- *Type*: rvalue\n\nuriescape\n---------\nUrlencodes a string or array of strings.\nRequires either a single string or an array as an input.\n\n\n- *Type*: rvalue\n\nvalidate_absolute_path\n----------------------\nValidate the string represents an absolute path in the filesystem.  This function works\nfor windows and unix style paths.\n\nThe following values will pass:\n\n    $my_path = \"C:/Program Files (x86)/Puppet Labs/Puppet\"\n    validate_absolute_path($my_path)\n    $my_path2 = \"/var/lib/puppet\"\n    validate_absolute_path($my_path2)\n\n\nThe following values will fail, causing compilation to abort:\n\n    validate_absolute_path(true)\n    validate_absolute_path([ 'var/lib/puppet', '/var/foo' ])\n    validate_absolute_path([ '/var/lib/puppet', 'var/foo' ])\n    $undefined = undef\n    validate_absolute_path($undefined)\n\n\n\n- *Type*: statement\n\nvalidate_array\n--------------\nValidate that all passed values are array data structures. Abort catalog\ncompilation if any value fails this check.\n\nThe following values will pass:\n\n    $my_array = [ 'one', 'two' ]\n    validate_array($my_array)\n\nThe following values will fail, causing compilation to abort:\n\n    validate_array(true)\n    validate_array('some_string')\n    $undefined = undef\n    validate_array($undefined)\n\n\n\n- *Type*: statement\n\nvalidate_augeas\n---------------\nPerform validation of a string using an Augeas lens\nThe first argument of this function should be a string to\ntest, and the second argument should be the name of the Augeas lens to use.\nIf Augeas fails to parse the string with the lens, the compilation will\nabort with a parse error.\n\nA third argument can be specified, listing paths which should\nnot be found in the file. The `$file` variable points to the location\nof the temporary file being tested in the Augeas tree.\n\nFor example, if you want to make sure your passwd content never contains\na user `foo`, you could write:\n\n    validate_augeas($passwdcontent, 'Passwd.lns', ['$file/foo'])\n\nOr if you wanted to ensure that no users used the '/bin/barsh' shell,\nyou could use:\n\n    validate_augeas($passwdcontent, 'Passwd.lns', ['$file/*[shell=\"/bin/barsh\"]']\n\nIf a fourth argument is specified, this will be the error message raised and\nseen by the user.\n\nA helpful error message can be returned like this:\n\n    validate_augeas($sudoerscontent, 'Sudoers.lns', [], 'Failed to validate sudoers content with Augeas')\n\n\n\n- *Type*: statement\n\nvalidate_bool\n-------------\nValidate that all passed values are either true or false. Abort catalog\ncompilation if any value fails this check.\n\nThe following values will pass:\n\n    $iamtrue = true\n    validate_bool(true)\n    validate_bool(true, true, false, $iamtrue)\n\nThe following values will fail, causing compilation to abort:\n\n    $some_array = [ true ]\n    validate_bool(\"false\")\n    validate_bool(\"true\")\n    validate_bool($some_array)\n\n\n\n- *Type*: statement\n\nvalidate_cmd\n------------\nPerform validation of a string with an external command.\nThe first argument of this function should be a string to\ntest, and the second argument should be a path to a test command\ntaking a file as last argument. If the command, launched against\na tempfile containing the passed string, returns a non-null value,\ncompilation will abort with a parse error.\n\nIf a third argument is specified, this will be the error message raised and\nseen by the user.\n\nA helpful error message can be returned like this:\n\nExample:\n\n    validate_cmd($sudoerscontent, '/usr/sbin/visudo -c -f', 'Visudo failed to validate sudoers content')\n\n\n\n- *Type*: statement\n\nvalidate_hash\n-------------\nValidate that all passed values are hash data structures. Abort catalog\ncompilation if any value fails this check.\n\nThe following values will pass:\n\n    $my_hash = { 'one' => 'two' }\n    validate_hash($my_hash)\n\nThe following values will fail, causing compilation to abort:\n\n    validate_hash(true)\n    validate_hash('some_string')\n    $undefined = undef\n    validate_hash($undefined)\n\n\n\n- *Type*: statement\n\nvalidate_re\n-----------\nPerform simple validation of a string against one or more regular\nexpressions. The first argument of this function should be a string to\ntest, and the second argument should be a stringified regular expression\n(without the // delimiters) or an array of regular expressions.  If none\nof the regular expressions match the string passed in, compilation will\nabort with a parse error.\n\nIf a third argument is specified, this will be the error message raised and\nseen by the user.\n\nThe following strings will validate against the regular expressions:\n\n    validate_re('one', '^one$')\n    validate_re('one', [ '^one', '^two' ])\n\nThe following strings will fail to validate, causing compilation to abort:\n\n    validate_re('one', [ '^two', '^three' ])\n\nA helpful error message can be returned like this:\n\n    validate_re($::puppetversion, '^2.7', 'The $puppetversion fact value does not match 2.7')\n\n\n\n- *Type*: statement\n\nvalidate_slength\n----------------\nValidate that the first argument is a string (or an array of strings), and\nless/equal to than the length of the second argument.  It fails if the first\nargument is not a string or array of strings, and if arg 2 is not convertable\nto a number.\n\nThe following values will pass:\n\n  validate_slength(\"discombobulate\",17)\n  validate_slength([\"discombobulate\",\"moo\"],17)\n\nThe following valueis will not:\n\n  validate_slength(\"discombobulate\",1)\n  validate_slength([\"discombobulate\",\"thermometer\"],5)\n\n\n\n- *Type*: statement\n\nvalidate_string\n---------------\nValidate that all passed values are string data structures. Abort catalog\ncompilation if any value fails this check.\n\nThe following values will pass:\n\n    $my_string = \"one two\"\n    validate_string($my_string, 'three')\n\nThe following values will fail, causing compilation to abort:\n\n    validate_string(true)\n    validate_string([ 'some', 'array' ])\n    $undefined = undef\n    validate_string($undefined)\n\n\n- *Type*: statement\n\nvalues\n------\nWhen given a hash this function will return the values of that hash.\n\n*Examples:*\n\n    $hash = {\n      'a' => 1,\n      'b' => 2,\n      'c' => 3,\n    }\n    values($hash)\n\nThis example would return:\n\n    [1,2,3]\n\n\n- *Type*: rvalue\n\nvalues_at\n---------\nFinds value inside an array based on location.\n\nThe first argument is the array you want to analyze, and the second element can\nbe a combination of:\n\n* A single numeric index\n* A range in the form of 'start-stop' (eg. 4-9)\n* An array combining the above\n\n*Examples*:\n\n    values_at(['a','b','c'], 2)\n\nWould return ['c'].\n\n    values_at(['a','b','c'], [\"0-1\"])\n\nWould return ['a','b'].\n\n    values_at(['a','b','c','d','e'], [0, \"2-3\"])\n\nWould return ['a','c','d'].\n\n\n- *Type*: rvalue\n\nzip\n---\nTakes one element from first array and merges corresponding elements from second array. This generates a sequence of n-element arrays, where n is one more than the count of arguments.\n\n*Example:*\n\n    zip(['1','2','3'],['4','5','6'])\n\nWould result in:\n\n    [\"1\", \"4\"], [\"2\", \"5\"], [\"3\", \"6\"]\n\n\n- *Type*: rvalue\n\n*This page autogenerated on 2013-04-11 13:54:25 -0700*\n",
      "changelog": "2013-05-06 - Jeff McCune <jeff@puppetlabs.com> - 4.1.0\n * (#20582) Restore facter_dot_d to stdlib for PE users (3b887c8)\n * (maint) Update Gemfile with GEM_FACTER_VERSION (f44d535)\n\n2013-05-06 - Alex Cline <acline@us.ibm.com> - 4.1.0\n * Terser method of string to array conversion courtesy of ethooz. (d38bce0)\n\n2013-05-06 - Alex Cline <acline@us.ibm.com> 4.1.0\n * Refactor ensure_resource expectations (b33cc24)\n\n2013-05-06 - Alex Cline <acline@us.ibm.com> 4.1.0\n * Changed str-to-array conversion and removed abbreviation. (de253db)\n\n2013-05-03 - Alex Cline <acline@us.ibm.com> 4.1.0\n * (#20548) Allow an array of resource titles to be passed into the ensure_resource function (e08734a)\n\n2013-05-02 - RaphaÃ«l Pinson <raphael.pinson@camptocamp.com> - 4.1.0\n * Add a dirname function (2ba9e47)\n\n2013-04-29 - Mark Smith-Guerrero <msmithgu@gmail.com> - 4.1.0\n * (maint) Fix a small typo in hash() description (928036a)\n\n2013-04-12 - Jeff McCune <jeff@puppetlabs.com> - 4.0.2\n * Update user information in gemspec to make the intent of the Gem clear.\n\n2013-04-11 - Jeff McCune <jeff@puppetlabs.com> - 4.0.1\n * Fix README function documentation (ab3e30c)\n\n2013-04-11 - Jeff McCune <jeff@puppetlabs.com> - 4.0.0\n * stdlib 4.0 drops support with Puppet 2.7\n * stdlib 4.0 preserves support with Puppet 3\n\n2013-04-11 - Jeff McCune <jeff@puppetlabs.com> - 4.0.0\n * Add ability to use puppet from git via bundler (9c5805f)\n\n2013-04-10 - Jeff McCune <jeff@puppetlabs.com> - 4.0.0\n * (maint) Make stdlib usable as a Ruby GEM (e81a45e)\n\n2013-04-10 - Erik DalÃ©n <dalen@spotify.com> - 4.0.0\n * Add a count function (f28550e)\n\n2013-03-31 - Amos Shapira <ashapira@atlassian.com> - 4.0.0\n * (#19998) Implement any2array (7a2fb80)\n\n2013-03-29 - Steve Huff <shuff@vecna.org> - 4.0.0\n * (19864) num2bool match fix (8d217f0)\n\n2013-03-20 - Erik DalÃ©n <dalen@spotify.com> - 4.0.0\n * Allow comparisons of Numeric and number as String (ff5dd5d)\n\n2013-03-26 - Richard Soderberg <rsoderberg@mozilla.com> - 4.0.0\n * add suffix function to accompany the prefix function (88a93ac)\n\n2013-03-19 - Kristof Willaert <kristof.willaert@gmail.com> - 4.0.0\n * Add floor function implementation and unit tests (0527341)\n\n2012-04-03 - Eric Shamow <eric@puppetlabs.com> - 4.0.0\n * (#13610) Add is_function_available to stdlib (961dcab)\n\n2012-12-17 - Justin Lambert <jlambert@eml.cc> - 4.0.0\n * str2bool should return a boolean if called with a boolean (5d5a4d4)\n\n2012-10-23 - Uwe Stuehler <ustuehler@team.mobile.de> - 4.0.0\n * Fix number of arguments check in flatten() (e80207b)\n\n2013-03-11 - Jeff McCune <jeff@puppetlabs.com> - 4.0.0\n * Add contributing document (96e19d0)\n\n2013-03-04 - RaphaÃ«l Pinson <raphael.pinson@camptocamp.com> - 4.0.0\n * Add missing documentation for validate_augeas and validate_cmd to README.markdown (a1510a1)\n\n2013-02-14 - Joshua Hoblitt <jhoblitt@cpan.org> - 4.0.0\n * (#19272) Add has_element() function (95cf3fe)\n\n2013-02-07 - RaphaÃ«l Pinson <raphael.pinson@camptocamp.com> - 4.0.0\n * validate_cmd(): Use Puppet::Util::Execution.execute when available (69248df)\n\n2012-12-06 - RaphaÃ«l Pinson <raphink@gmail.com> - 4.0.0\n * Add validate_augeas function (3a97c23)\n\n2012-12-06 - RaphaÃ«l Pinson <raphink@gmail.com> - 4.0.0\n * Add validate_cmd function (6902cc5)\n\n2013-01-14 - David Schmitt <david@dasz.at> - 4.0.0\n * Add geppetto project definition (b3fc0a3)\n\n2013-01-02 - Jaka Hudoklin <jakahudoklin@gmail.com> - 4.0.0\n * Add getparam function to get defined resource parameters (20e0e07)\n\n2013-01-05 - Jeff McCune <jeff@puppetlabs.com> - 4.0.0\n * (maint) Add Travis CI Support (d082046)\n\n2012-12-04 - Jeff McCune <jeff@puppetlabs.com> - 4.0.0\n * Clarify that stdlib 3 supports Puppet 3 (3a6085f)\n\n2012-11-30 - Erik DalÃ©n <dalen@spotify.com> - 4.0.0\n * maint: style guideline fixes (7742e5f)\n\n2012-11-09 - James Fryman <james@frymanet.com> - 4.0.0\n * puppet-lint cleanup (88acc52)\n\n2012-11-06 - Joe Julian <me@joejulian.name> - 4.0.0\n * Add function, uriescape, to URI.escape strings. Redmine #17459 (fd52b8d)\n\n2012-09-18 - Chad Metcalf <chad@wibidata.com> - 3.2.0\n * Add an ensure_packages function. (8a8c09e)\n\n2012-11-23 - Erik DalÃ©n <dalen@spotify.com> - 3.2.0\n * (#17797) min() and max() functions (9954133)\n\n2012-05-23 - Peter Meier <peter.meier@immerda.ch> - 3.2.0\n * (#14670) autorequire a file_line resource's path (dfcee63)\n\n2012-11-19 - Joshua Harlan Lifton <lifton@puppetlabs.com> - 3.2.0\n * Add join_keys_to_values function (ee0f2b3)\n\n2012-11-17 - Joshua Harlan Lifton <lifton@puppetlabs.com> - 3.2.0\n * Extend delete function for strings and hashes (7322e4d)\n\n2012-08-03 - Gary Larizza <gary@puppetlabs.com> - 3.2.0\n * Add the pick() function (ba6dd13)\n\n2012-03-20 - Wil Cooley <wcooley@pdx.edu> - 3.2.0\n * (#13974) Add predicate functions for interface facts (f819417)\n\n2012-11-06 - Joe Julian <me@joejulian.name> - 3.2.0\n * Add function, uriescape, to URI.escape strings. Redmine #17459 (70f4a0e)\n\n2012-10-25 - Jeff McCune <jeff@puppetlabs.com> - 3.1.1\n * (maint) Fix spec failures resulting from Facter API changes (97f836f)\n\n2012-10-23 - Matthaus Owens <matthaus@puppetlabs.com> - 3.1.0\n * Add PE facts to stdlib (cdf3b05)\n\n2012-08-16 - Jeff McCune <jeff@puppetlabs.com> - 3.0.1\n * Fix accidental removal of facts_dot_d.rb in 3.0.0 release\n\n2012-08-16 - Jeff McCune <jeff@puppetlabs.com> - 3.0.0\n * stdlib 3.0 drops support with Puppet 2.6\n * stdlib 3.0 preserves support with Puppet 2.7\n\n2012-08-07 - Dan Bode <dan@puppetlabs.com> - 3.0.0\n * Add function ensure_resource and defined_with_params (ba789de)\n\n2012-07-10 - Hailee Kenney <hailee@puppetlabs.com> - 3.0.0\n * (#2157) Remove facter_dot_d for compatibility with external facts (f92574f)\n\n2012-04-10 - Chris Price <chris@puppetlabs.com> - 3.0.0\n * (#13693) moving logic from local spec_helper to puppetlabs_spec_helper (85f96df)\n\n2012-10-25 - Jeff McCune <jeff@puppetlabs.com> - 2.5.1\n * (maint) Fix spec failures resulting from Facter API changes (97f836f)\n\n2012-10-23 - Matthaus Owens <matthaus@puppetlabs.com> - 2.5.0\n * Add PE facts to stdlib (cdf3b05)\n\n2012-08-15 - Dan Bode <dan@puppetlabs.com> - 2.5.0\n * Explicitly load functions used by ensure_resource (9fc3063)\n\n2012-08-13 - Dan Bode <dan@puppetlabs.com> - 2.5.0\n * Add better docs about duplicate resource failures (97d327a)\n\n2012-08-13 - Dan Bode <dan@puppetlabs.com> - 2.5.0\n * Handle undef for parameter argument (4f8b133)\n\n2012-08-07 - Dan Bode <dan@puppetlabs.com> - 2.5.0\n * Add function ensure_resource and defined_with_params (a0cb8cd)\n\n2012-08-20 - Jeff McCune <jeff@puppetlabs.com> - 2.5.0\n * Disable tests that fail on 2.6.x due to #15912 (c81496e)\n\n2012-08-20 - Jeff McCune <jeff@puppetlabs.com> - 2.5.0\n * (Maint) Fix mis-use of rvalue functions as statements (4492913)\n\n2012-08-20 - Jeff McCune <jeff@puppetlabs.com> - 2.5.0\n * Add .rspec file to repo root (88789e8)\n\n2012-06-07 - Chris Price <chris@puppetlabs.com> - 2.4.0\n * Add support for a 'match' parameter to file_line (a06c0d8)\n\n2012-08-07 - Erik DalÃ©n <dalen@spotify.com> - 2.4.0\n * (#15872) Add to_bytes function (247b69c)\n\n2012-07-19 - Jeff McCune <jeff@puppetlabs.com> - 2.4.0\n * (Maint) use PuppetlabsSpec::PuppetInternals.scope (master) (deafe88)\n\n2012-07-10 - Hailee Kenney <hailee@puppetlabs.com> - 2.4.0\n * (#2157) Make facts_dot_d compatible with external facts (5fb0ddc)\n\n2012-03-16 - Steve Traylen <steve.traylen@cern.ch> - 2.4.0\n * (#13205) Rotate array/string randomley based on fqdn, fqdn_rotate() (fef247b)\n\n2012-05-22 - Peter Meier <peter.meier@immerda.ch> - 2.3.3\n * fix regression in #11017 properly (f0a62c7)\n\n2012-05-10 - Jeff McCune <jeff@puppetlabs.com> - 2.3.3\n * Fix spec tests using the new spec_helper (7d34333)\n\n2012-05-10 - Puppet Labs <support@puppetlabs.com> - 2.3.2\n * Make file_line default to ensure => present (1373e70)\n * Memoize file_line spec instance variables (20aacc5)\n * Fix spec tests using the new spec_helper (1ebfa5d)\n * (#13595) initialize_everything_for_tests couples modules Puppet ver (3222f35)\n * (#13439) Fix MRI 1.9 issue with spec_helper (15c5fd1)\n * (#13439) Fix test failures with Puppet 2.6.x (665610b)\n * (#13439) refactor spec helper for compatibility with both puppet 2.7 and master (82194ca)\n * (#13494) Specify the behavior of zero padded strings (61891bb)\n\n2012-03-29 Puppet Labs <support@puppetlabs.com> - 2.1.3\n* (#11607) Add Rakefile to enable spec testing\n* (#12377) Avoid infinite loop when retrying require json\n\n2012-03-13 Puppet Labs <support@puppetlabs.com> - 2.3.1\n* (#13091) Fix LoadError bug with puppet apply and puppet_vardir fact\n\n2012-03-12 Puppet Labs <support@puppetlabs.com> - 2.3.0\n* Add a large number of new Puppet functions\n* Backwards compatibility preserved with 2.2.x\n\n2011-12-30 Puppet Labs <support@puppetlabs.com> - 2.2.1\n* Documentation only release for the Forge\n\n2011-12-30 Puppet Labs <support@puppetlabs.com> - 2.1.2\n* Documentation only release for PE 2.0.x\n\n2011-11-08 Puppet Labs <support@puppetlabs.com> - 2.2.0\n* #10285 - Refactor json to use pson instead.\n* Maint  - Add watchr autotest script\n* Maint  - Make rspec tests work with Puppet 2.6.4\n* #9859  - Add root_home fact and tests\n\n2011-08-18 Puppet Labs <support@puppetlabs.com> - 2.1.1\n* Change facts.d paths to match Facter 2.0 paths.\n* /etc/facter/facts.d\n* /etc/puppetlabs/facter/facts.d\n\n2011-08-17 Puppet Labs <support@puppetlabs.com> - 2.1.0\n* Add R.I. Pienaar's facts.d custom facter fact\n* facts defined in /etc/facts.d and /etc/puppetlabs/facts.d are\n  automatically loaded now.\n\n2011-08-04 Puppet Labs <support@puppetlabs.com> - 2.0.0\n* Rename whole_line to file_line\n* This is an API change and as such motivating a 2.0.0 release according to semver.org.\n\n2011-08-04 Puppet Labs <support@puppetlabs.com> - 1.1.0\n* Rename append_line to whole_line\n* This is an API change and as such motivating a 1.1.0 release.\n\n2011-08-04 Puppet Labs <support@puppetlabs.com> - 1.0.0\n* Initial stable release\n* Add validate_array and validate_string functions\n* Make merge() function work with Ruby 1.8.5\n* Add hash merging function\n* Add has_key function\n* Add loadyaml() function\n* Add append_line native\n\n2011-06-21 Jeff McCune <jeff@puppetlabs.com> - 0.1.7\n* Add validate_hash() and getvar() functions\n\n2011-06-15 Jeff McCune <jeff@puppetlabs.com> - 0.1.6\n* Add anchor resource type to provide containment for composite classes\n\n2011-06-03 Jeff McCune <jeff@puppetlabs.com> - 0.1.5\n* Add validate_bool() function to stdlib\n\n0.1.4 2011-05-26 Jeff McCune <jeff@puppetlabs.com>\n* Move most stages after main\n\n0.1.3 2011-05-25 Jeff McCune <jeff@puppetlabs.com>\n* Add validate_re() function\n\n0.1.2 2011-05-24 Jeff McCune <jeff@puppetlabs.com>\n* Update to add annotated tag\n\n0.1.1 2011-05-24 Jeff McCune <jeff@puppetlabs.com>\n* Add stdlib::stages class with a standard set of stages\n",
      "license": "Copyright (C) 2011 Puppet Labs Inc\n\nand some parts:\n\nCopyright (C) 2011 Krzysztof Wilczynski\n\nPuppet Labs can be contacted at: info@puppetlabs.com\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
      "created_at": "2013-05-13 08:31:19 -0700",
      "updated_at": "2015-02-04 21:34:08 -0800",
      "deleted_at": null
    },
    {
      "uri": "/v3/releases/puppetlabs-stdlib-4.3.2",
      "module": {
        "uri": "/v3/modules/puppetlabs-stdlib",
        "name": "stdlib",
        "owner": {
          "uri": "/v3/users/puppetlabs",
          "username": "puppetlabs",
          "gravatar_id": "fdd009b7c1ec96e088b389f773e87aec"
        }
      },
      "version": "4.3.2",
      "metadata": {
        "name": "puppetlabs-stdlib",
        "version": "4.3.2",
        "author": "puppetlabs",
        "summary": "Puppet Module Standard Library",
        "license": "Apache 2.0",
        "source": "git://github.com/puppetlabs/puppetlabs-stdlib",
        "project_page": "https://github.com/puppetlabs/puppetlabs-stdlib",
        "issues_url": "https://github.com/puppetlabs/puppetlabs-stdlib/issues",
        "operatingsystem_support": [
          {
            "operatingsystem": "RedHat",
            "operatingsystemrelease": [
              "4",
              "5",
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "CentOS",
            "operatingsystemrelease": [
              "4",
              "5",
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "OracleLinux",
            "operatingsystemrelease": [
              "4",
              "5",
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "Scientific",
            "operatingsystemrelease": [
              "4",
              "5",
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "SLES",
            "operatingsystemrelease": [
              "11 SP1"
            ]
          },
          {
            "operatingsystem": "Debian",
            "operatingsystemrelease": [
              "6",
              "7"
            ]
          },
          {
            "operatingsystem": "Ubuntu",
            "operatingsystemrelease": [
              "10.04",
              "12.04",
              "14.04"
            ]
          },
          {
            "operatingsystem": "Solaris",
            "operatingsystemrelease": [
              "10",
              "11"
            ]
          },
          {
            "operatingsystem": "Windows",
            "operatingsystemrelease": [
              "Server 2003",
              "Server 2003 R2",
              "Server 2008",
              "Server 2008 R2",
              "Server 2012",
              "Server 2012 R2",
              "7",
              "8"
            ]
          },
          {
            "operatingsystem": "AIX",
            "operatingsystemrelease": [
              "5.3",
              "6.1",
              "7.1"
            ]
          }
        ],
        "requirements": [
          {
            "name": "pe",
            "version_requirement": "3.3.x"
          },
          {
            "name": "puppet",
            "version_requirement": ">=2.7.20 <4.0.0"
          }
        ],
        "description": "Standard Library for Puppet Modules",
        "dependencies": [

        ]
      },
      "tags": [
        "puppetlabs",
        "library",
        "stdlib",
        "standard",
        "stages"
      ],
      "supported": true,
      "validation_score": 100,
      "file_uri": "/v3/files/puppetlabs-stdlib-4.3.2.tar.gz",
      "file_size": 99494,
      "file_md5": "62a3b96ff5dbb6266dc365418b8eb62f",
      "downloads": 426960,
      "readme": "# Puppet Labs Standard Library #\n\n[![Build Status](https://travis-ci.org/puppetlabs/puppetlabs-stdlib.png?branch=master)](https://travis-ci.org/puppetlabs/puppetlabs-stdlib)\n\nThis module provides a \"standard library\" of resources for developing Puppet\nModules.  This modules will include the following additions to Puppet\n\n * Stages\n * Facts\n * Functions\n * Defined resource types\n * Types\n * Providers\n\nThis module is officially curated and provided by Puppet Labs.  The modules\nPuppet Labs writes and distributes will make heavy use of this standard\nlibrary.\n\nTo report or research a bug with any part of this module, please go to\n[http://tickets.puppetlabs.com/browse/PUP](http://tickets.puppetlabs.com/browse/PUP)\n\n# Versions #\n\nThis module follows semver.org (v1.0.0) versioning guidelines.  The standard\nlibrary module is released as part of [Puppet\nEnterprise](http://puppetlabs.com/puppet/puppet-enterprise/) and as a result\nolder versions of Puppet Enterprise that Puppet Labs still supports will have\nbugfix maintenance branches periodically \"merged up\" into master.  The current\nlist of integration branches are:\n\n * v2.1.x (v2.1.1 released in PE 1)\n * v2.2.x (Never released as part of PE, only to the Forge)\n * v2.3.x (Released in PE 2)\n * v3.0.x (Released in PE 3)\n * v4.0.x (Maintains compatibility with v3.x despite the major semantic version bump.  Compatible with Puppet 2.7.x)\n * v5.x (To be released when stdlib can drop support for Puppet 2.7.x.  Please see [this discussion](https://github.com/puppetlabs/puppetlabs-stdlib/pull/176#issuecomment-30251414))\n * master (mainline development branch)\n\nThe first Puppet Enterprise version including the stdlib module is Puppet\nEnterprise 1.2.\n\n# Compatibility #\n\nPuppet Versions | < 2.6 | 2.6 | 2.7 | 3.x |\n:---------------|:-----:|:---:|:---:|:----:\n**stdlib 2.x**  | no    | **yes** | **yes** | no\n**stdlib 3.x**  | no    | no  | **yes** | **yes**\n**stdlib 4.x**  | no    | no  | **yes** | **yes**\n\nThe stdlib module does not work with Puppet versions released prior to Puppet\n2.6.0.\n\n## stdlib 2.x ##\n\nAll stdlib releases in the 2.0 major version support Puppet 2.6 and Puppet 2.7.\n\n## stdlib 3.x ##\n\nThe 3.0 major release of stdlib drops support for Puppet 2.6.  Stdlib 3.x\nsupports Puppet 2 and Puppet 3.\n\n## stdlib 4.x ##\n\nThe 4.0 major release of stdlib was intended to drop support for Puppet 2.7,\nbut the impact on end users was too high.  The decision was made to treat\nstdlib 4.x as a continuation of stdlib 3.x support.  Stdlib 4.x supports Puppet\n2.7 and 3.  Notably, ruby 1.8.5 is no longer supported though ruby\n1.8.7, 1.9.3, and 2.0.0 are fully supported.\n\n# Functions #\n\nabs\n---\nReturns the absolute value of a number, for example -34.56 becomes\n34.56. Takes a single integer and float value as an argument.\n\n\n- *Type*: rvalue\n\nany2array\n---------\nThis converts any object to an array containing that object. Empty argument\nlists are converted to an empty array. Arrays are left untouched. Hashes are\nconverted to arrays of alternating keys and values.\n\n\n- *Type*: rvalue\n\nbase64\n--------\nConverts a string to and from base64 encoding.\nRequires an action ['encode','decode'] and either a plain or base64 encoded\nstring\n\n\n- *Type*: rvalue\n\nbool2num\n--------\nConverts a boolean to a number. Converts the values:\nfalse, f, 0, n, and no to 0\ntrue, t, 1, y, and yes to 1\n    Requires a single boolean or string as an input.\n\n\n- *Type*: rvalue\n\ncapitalize\n----------\nCapitalizes the first letter of a string or array of strings.\nRequires either a single string or an array as an input.\n\n\n- *Type*: rvalue\n\nchomp\n-----\nRemoves the record separator from the end of a string or an array of\nstrings, for example `hello\\n` becomes `hello`.\nRequires a single string or array as an input.\n\n\n- *Type*: rvalue\n\nchop\n----\nReturns a new string with the last character removed. If the string ends\nwith `\\r\\n`, both characters are removed. Applying chop to an empty\nstring returns an empty string. If you wish to merely remove record\nseparators then you should use the `chomp` function.\nRequires a string or array of strings as input.\n\n\n- *Type*: rvalue\n\nconcat\n------\nAppends the contents of array 2 onto array 1.\n\n*Example:*\n\n    concat(['1','2','3'],['4','5','6'])\n\nWould result in:\n\n  ['1','2','3','4','5','6']\n\n  concat(['1','2','3'],'4')\n\nWould result in:\n\n  ['1','2','3','4']\n\n- *Type*: rvalue\n\ncount\n-----\nTakes an array as first argument and an optional second argument.\nCount the number of elements in array that matches second argument.\nIf called with only an array it counts the number of elements that are not nil/undef.\n\n\n- *Type*: rvalue\n\ndefined_with_params\n-------------------\nTakes a resource reference and an optional hash of attributes.\n\nReturns true if a resource with the specified attributes has already been added\nto the catalog, and false otherwise.\n\n    user { 'dan':\n      ensure => present,\n    }\n\n    if ! defined_with_params(User[dan], {'ensure' => 'present' }) {\n      user { 'dan': ensure => present, }\n    }\n\n\n- *Type*: rvalue\n\ndelete\n------\nDeletes all instances of a given element from an array, substring from a\nstring, or key from a hash.\n\n*Examples:*\n\n    delete(['a','b','c','b'], 'b')\n    Would return: ['a','c']\n\n    delete({'a'=>1,'b'=>2,'c'=>3}, 'b')\n    Would return: {'a'=>1,'c'=>3}\n\n    delete('abracadabra', 'bra')\n    Would return: 'acada'\n\n\n- *Type*: rvalue\n\ndelete_at\n---------\nDeletes a determined indexed value from an array.\n\n*Examples:*\n\n    delete_at(['a','b','c'], 1)\n\nWould return: ['a','c']\n\n\n- *Type*: rvalue\n\ndelete_values\n-------------\nDeletes all instances of a given value from a hash.\n\n*Examples:*\n\n    delete_values({'a'=>'A','b'=>'B','c'=>'C','B'=>'D'}, 'B')\n\nWould return: {'a'=>'A','c'=>'C','B'=>'D'}\n\n\n- *Type*: rvalue\n\ndelete_undef_values\n-------------------\nDeletes all instances of the undef value from an array or hash.\n\n*Examples:*\n\n    $hash = delete_undef_values({a=>'A', b=>'', c=>undef, d => false})\n\nWould return: {a => 'A', b => '', d => false}\n\n    $array = delete_undef_values(['A','',undef,false])\n\nWould return: ['A','',false]\n\n- *Type*: rvalue\n\ndifference\n----------\nThis function returns the difference between two arrays.\nThe returned array is a copy of the original array, removing any items that\nalso appear in the second array.\n\n*Examples:*\n\n    difference([\"a\",\"b\",\"c\"],[\"b\",\"c\",\"d\"])\n\nWould return: [\"a\"]\n\ndirname\n-------\nReturns the `dirname` of a path.\n\n*Examples:*\n\n    dirname('/path/to/a/file.ext')\n\nWould return: '/path/to/a'\n\ndowncase\n--------\nConverts the case of a string or all strings in an array to lower case.\n\n\n- *Type*: rvalue\n\nempty\n-----\nReturns true if the variable is empty.\n\n\n- *Type*: rvalue\n\nensure_packages\n---------------\nTakes a list of packages and only installs them if they don't already exist.\nIt optionally takes a hash as a second parameter that will be passed as the\nthird argument to the ensure_resource() function.\n\n\n- *Type*: statement\n\nensure_resource\n---------------\nTakes a resource type, title, and a list of attributes that describe a\nresource.\n\n    user { 'dan':\n      ensure => present,\n    }\n\nThis example only creates the resource if it does not already exist:\n\n    ensure_resource('user', 'dan', {'ensure' => 'present' })\n\nIf the resource already exists but does not match the specified parameters,\nthis function will attempt to recreate the resource leading to a duplicate\nresource definition error.\n\nAn array of resources can also be passed in and each will be created with\nthe type and parameters specified if it doesn't already exist.\n\n    ensure_resource('user', ['dan','alex'], {'ensure' => 'present'})\n\n\n\n- *Type*: statement\n\nfile_line\n---------\nThis resource ensures that a given line is contained within a file. You can also use \n\"match\" to replace existing lines.\n\n*Examples:*\n\n    file_line { 'sudo_rule':\n      path => '/etc/sudoers',\n      line => '%sudo ALL=(ALL) ALL',\n    }\n\n    file_line { 'change_mount':\n      path  => '/etc/fstab',\n      line  => '10.0.0.1:/vol/data /opt/data nfs defaults 0 0',\n      match => '^172.16.17.2:/vol/old',\n    }\n\n- *Type*: resource\n\nflatten\n-------\nThis function flattens any deeply nested arrays and returns a single flat array\nas a result.\n\n*Examples:*\n\n    flatten(['a', ['b', ['c']]])\n\nWould return: ['a','b','c']\n\n\n- *Type*: rvalue\n\nfloor\n-----\nReturns the largest integer less or equal to the argument.\nTakes a single numeric value as an argument.\n\n\n- *Type*: rvalue\n\nfqdn_rotate\n-----------\nRotates an array a random number of times based on a nodes fqdn.\n\n\n- *Type*: rvalue\n\nget_module_path\n---------------\nReturns the absolute path of the specified module for the current\nenvironment.\n\nExample:\n  $module_path = get_module_path('stdlib')\n\n\n- *Type*: rvalue\n\ngetparam\n--------\nTakes a resource reference and name of the parameter and\nreturns value of resource's parameter.\n\n*Examples:*\n\n    define example_resource($param) {\n    }\n\n    example_resource { \"example_resource_instance\":\n        param => \"param_value\"\n    }\n\n    getparam(Example_resource[\"example_resource_instance\"], \"param\")\n\nWould return: param_value\n\n\n- *Type*: rvalue\n\ngetvar\n------\nLookup a variable in a remote namespace.\n\nFor example:\n\n    $foo = getvar('site::data::foo')\n    # Equivalent to $foo = $site::data::foo\n\nThis is useful if the namespace itself is stored in a string:\n\n    $datalocation = 'site::data'\n    $bar = getvar(\"${datalocation}::bar\")\n    # Equivalent to $bar = $site::data::bar\n\n\n- *Type*: rvalue\n\ngrep\n----\nThis function searches through an array and returns any elements that match\nthe provided regular expression.\n\n*Examples:*\n\n    grep(['aaa','bbb','ccc','aaaddd'], 'aaa')\n\nWould return:\n\n    ['aaa','aaaddd']\n\n\n- *Type*: rvalue\n\nhas_interface_with\n------------------\nReturns boolean based on kind and value:\n* macaddress\n* netmask\n* ipaddress\n* network\n\n*Examples:*\n\n    has_interface_with(\"macaddress\", \"x:x:x:x:x:x\")\n    has_interface_with(\"ipaddress\", \"127.0.0.1\")    => true\n\netc.\n\nIf no \"kind\" is given, then the presence of the interface is checked:\n\n    has_interface_with(\"lo\")                        => true\n\n\n- *Type*: rvalue\n\nhas_ip_address\n--------------\nReturns true if the client has the requested IP address on some interface.\n\nThis function iterates through the 'interfaces' fact and checks the\n'ipaddress_IFACE' facts, performing a simple string comparison.\n\n\n- *Type*: rvalue\n\nhas_ip_network\n--------------\nReturns true if the client has an IP address within the requested network.\n\nThis function iterates through the 'interfaces' fact and checks the\n'network_IFACE' facts, performing a simple string comparision.\n\n\n- *Type*: rvalue\n\nhas_key\n-------\nDetermine if a hash has a certain key value.\n\nExample:\n\n    $my_hash = {'key_one' => 'value_one'}\n    if has_key($my_hash, 'key_two') {\n      notice('we will not reach here')\n    }\n    if has_key($my_hash, 'key_one') {\n      notice('this will be printed')\n    }\n\n\n\n- *Type*: rvalue\n\nhash\n----\nThis function converts an array into a hash.\n\n*Examples:*\n\n    hash(['a',1,'b',2,'c',3])\n\nWould return: {'a'=>1,'b'=>2,'c'=>3}\n\n\n- *Type*: rvalue\n\nintersection\n-----------\nThis function returns an array an intersection of two.\n\n*Examples:*\n\n    intersection([\"a\",\"b\",\"c\"],[\"b\",\"c\",\"d\"])\n\nWould return: [\"b\",\"c\"]\n\nis_array\n--------\nReturns true if the variable passed to this function is an array.\n\n- *Type*: rvalue\n\nis_bool\n--------\nReturns true if the variable passed to this function is a boolean.\n\n- *Type*: rvalue\n\nis_domain_name\n--------------\nReturns true if the string passed to this function is a syntactically correct domain name.\n\n- *Type*: rvalue\n\nis_float\n--------\nReturns true if the variable passed to this function is a float.\n\n- *Type*: rvalue\n\nis_function_available\n---------------------\nThis function accepts a string as an argument, determines whether the\nPuppet runtime has access to a function by that name.  It returns a\ntrue if the function exists, false if not.\n\n- *Type*: rvalue\n\nis_hash\n-------\nReturns true if the variable passed to this function is a hash.\n\n- *Type*: rvalue\n\nis_integer\n----------\nReturns true if the variable returned to this string is an integer.\n\n- *Type*: rvalue\n\nis_ip_address\n-------------\nReturns true if the string passed to this function is a valid IP address.\n\n- *Type*: rvalue\n\nis_mac_address\n--------------\nReturns true if the string passed to this function is a valid mac address.\n\n- *Type*: rvalue\n\nis_numeric\n----------\nReturns true if the variable passed to this function is a number.\n\n- *Type*: rvalue\n\nis_string\n---------\nReturns true if the variable passed to this function is a string.\n\n- *Type*: rvalue\n\njoin\n----\nThis function joins an array into a string using a separator.\n\n*Examples:*\n\n    join(['a','b','c'], \",\")\n\nWould result in: \"a,b,c\"\n\n- *Type*: rvalue\n\njoin_keys_to_values\n-------------------\nThis function joins each key of a hash to that key's corresponding value with a\nseparator. Keys and values are cast to strings. The return value is an array in\nwhich each element is one joined key/value pair.\n\n*Examples:*\n\n    join_keys_to_values({'a'=>1,'b'=>2}, \" is \")\n\nWould result in: [\"a is 1\",\"b is 2\"]\n\n- *Type*: rvalue\n\nkeys\n----\nReturns the keys of a hash as an array.\n\n- *Type*: rvalue\n\nloadyaml\n--------\nLoad a YAML file containing an array, string, or hash, and return the data\nin the corresponding native data type.\n\nFor example:\n\n    $myhash = loadyaml('/etc/puppet/data/myhash.yaml')\n\n\n- *Type*: rvalue\n\nlstrip\n------\nStrips leading spaces to the left of a string.\n\n- *Type*: rvalue\n\nmax\n---\nReturns the highest value of all arguments.\nRequires at least one argument.\n\n- *Type*: rvalue\n\nmember\n------\nThis function determines if a variable is a member of an array.\n\n*Examples:*\n\n    member(['a','b'], 'b')\n\nWould return: true\n\n    member(['a','b'], 'c')\n\nWould return: false\n\n- *Type*: rvalue\n\nmerge\n-----\nMerges two or more hashes together and returns the resulting hash.\n\nFor example:\n\n    $hash1 = {'one' => 1, 'two' => 2}\n    $hash2 = {'two' => 'dos', 'three' => 'tres'}\n    $merged_hash = merge($hash1, $hash2)\n    # The resulting hash is equivalent to:\n    # $merged_hash =  {'one' => 1, 'two' => 'dos', 'three' => 'tres'}\n\nWhen there is a duplicate key, the key in the rightmost hash will \"win.\"\n\n- *Type*: rvalue\n\nmin\n---\nReturns the lowest value of all arguments.\nRequires at least one argument.\n\n- *Type*: rvalue\n\nnum2bool\n--------\nThis function converts a number or a string representation of a number into a\ntrue boolean. Zero or anything non-numeric becomes false. Numbers higher then 0\nbecome true.\n\n- *Type*: rvalue\n\nparsejson\n---------\nThis function accepts JSON as a string and converts into the correct Puppet\nstructure.\n\n- *Type*: rvalue\n\nparseyaml\n---------\nThis function accepts YAML as a string and converts it into the correct\nPuppet structure.\n\n- *Type*: rvalue\n\npick\n----\nThis function is similar to a coalesce function in SQL in that it will return\nthe first value in a list of values that is not undefined or an empty string\n(two things in Puppet that will return a boolean false value). Typically,\nthis function is used to check for a value in the Puppet Dashboard/Enterprise\nConsole, and failover to a default value like the following:\n\n    $real_jenkins_version = pick($::jenkins_version, '1.449')\n\nThe value of $real_jenkins_version will first look for a top-scope variable\ncalled 'jenkins_version' (note that parameters set in the Puppet Dashboard/\nEnterprise Console are brought into Puppet as top-scope variables), and,\nfailing that, will use a default value of 1.449.\n\n- *Type*: rvalue\n\nprefix\n------\nThis function applies a prefix to all elements in an array.\n\n*Examples:*\n\n    prefix(['a','b','c'], 'p')\n\nWill return: ['pa','pb','pc']\n\n- *Type*: rvalue\n\nrange\n-----\nWhen given range in the form of (start, stop) it will extrapolate a range as\nan array.\n\n*Examples:*\n\n    range(\"0\", \"9\")\n\nWill return: [0,1,2,3,4,5,6,7,8,9]\n\n    range(\"00\", \"09\")\n\nWill return: [0,1,2,3,4,5,6,7,8,9] - Zero padded strings are converted to\nintegers automatically\n\n    range(\"a\", \"c\")\n\nWill return: [\"a\",\"b\",\"c\"]\n\n    range(\"host01\", \"host10\")\n\nWill return: [\"host01\", \"host02\", ..., \"host09\", \"host10\"]\n\n- *Type*: rvalue\n\nreject\n------\nThis function searches through an array and rejects all elements that match\nthe provided regular expression.\n\n*Examples:*\n\n    reject(['aaa','bbb','ccc','aaaddd'], 'aaa')\n\nWould return:\n\n    ['bbb','ccc']\n\n\n- *Type*: rvalue\n\nreverse\n-------\nReverses the order of a string or array.\n\n- *Type*: rvalue\n\nrstrip\n------\nStrips leading spaces to the right of the string.\n\n- *Type*: rvalue\n\nshuffle\n-------\nRandomizes the order of a string or array elements.\n\n- *Type*: rvalue\n\nsize\n----\nReturns the number of elements in a string or array.\n\n- *Type*: rvalue\n\nsort\n----\nSorts strings and arrays lexically.\n\n- *Type*: rvalue\n\nsqueeze\n-------\nReturns a new string where runs of the same character that occur in this set\nare replaced by a single character.\n\n- *Type*: rvalue\n\nstr2bool\n--------\nThis converts a string to a boolean. This attempts to convert strings that\ncontain things like: y, 1, t, true to 'true' and strings that contain things\nlike: 0, f, n, false, no to 'false'.\n\n\n- *Type*: rvalue\n\nstr2saltedsha512\n----------------\nThis converts a string to a salted-SHA512 password hash (which is used for\nOS X versions >= 10.7). Given any simple string, you will get a hex version\nof a salted-SHA512 password hash that can be inserted into your Puppet\nmanifests as a valid password attribute.\n\n\n- *Type*: rvalue\n\nstrftime\n--------\nThis function returns formatted time.\n\n*Examples:*\n\nTo return the time since epoch:\n\n    strftime(\"%s\")\n\nTo return the date:\n\n    strftime(\"%Y-%m-%d\")\n\n*Format meaning:*\n\n    %a - The abbreviated weekday name (``Sun'')\n    %A - The  full  weekday  name (``Sunday'')\n    %b - The abbreviated month name (``Jan'')\n    %B - The  full  month  name (``January'')\n    %c - The preferred local date and time representation\n    %C - Century (20 in 2009)\n    %d - Day of the month (01..31)\n    %D - Date (%m/%d/%y)\n    %e - Day of the month, blank-padded ( 1..31)\n    %F - Equivalent to %Y-%m-%d (the ISO 8601 date format)\n    %h - Equivalent to %b\n    %H - Hour of the day, 24-hour clock (00..23)\n    %I - Hour of the day, 12-hour clock (01..12)\n    %j - Day of the year (001..366)\n    %k - hour, 24-hour clock, blank-padded ( 0..23)\n    %l - hour, 12-hour clock, blank-padded ( 0..12)\n    %L - Millisecond of the second (000..999)\n    %m - Month of the year (01..12)\n    %M - Minute of the hour (00..59)\n    %n - Newline (\\n)\n    %N - Fractional seconds digits, default is 9 digits (nanosecond)\n            %3N  millisecond (3 digits)\n            %6N  microsecond (6 digits)\n            %9N  nanosecond (9 digits)\n    %p - Meridian indicator (``AM''  or  ``PM'')\n    %P - Meridian indicator (``am''  or  ``pm'')\n    %r - time, 12-hour (same as %I:%M:%S %p)\n    %R - time, 24-hour (%H:%M)\n    %s - Number of seconds since 1970-01-01 00:00:00 UTC.\n    %S - Second of the minute (00..60)\n    %t - Tab character (\t)\n    %T - time, 24-hour (%H:%M:%S)\n    %u - Day of the week as a decimal, Monday being 1. (1..7)\n    %U - Week  number  of the current year,\n            starting with the first Sunday as the first\n            day of the first week (00..53)\n    %v - VMS date (%e-%b-%Y)\n    %V - Week number of year according to ISO 8601 (01..53)\n    %W - Week  number  of the current year,\n            starting with the first Monday as the first\n            day of the first week (00..53)\n    %w - Day of the week (Sunday is 0, 0..6)\n    %x - Preferred representation for the date alone, no time\n    %X - Preferred representation for the time alone, no date\n    %y - Year without a century (00..99)\n    %Y - Year with century\n    %z - Time zone as  hour offset from UTC (e.g. +0900)\n    %Z - Time zone name\n    %% - Literal ``%'' character\n\n\n- *Type*: rvalue\n\nstrip\n-----\nThis function removes leading and trailing whitespace from a string or from\nevery string inside an array.\n\n*Examples:*\n\n    strip(\"    aaa   \")\n\nWould result in: \"aaa\"\n\n\n- *Type*: rvalue\n\nsuffix\n------\nThis function applies a suffix to all elements in an array.\n\n*Examples:*\n\n    suffix(['a','b','c'], 'p')\n\nWill return: ['ap','bp','cp']\n\n\n- *Type*: rvalue\n\nswapcase\n--------\nThis function will swap the existing case of a string.\n\n*Examples:*\n\n    swapcase(\"aBcD\")\n\nWould result in: \"AbCd\"\n\n\n- *Type*: rvalue\n\ntime\n----\nThis function will return the current time since epoch as an integer.\n\n*Examples:*\n\n    time()\n\nWill return something like: 1311972653\n\n\n- *Type*: rvalue\n\nto_bytes\n--------\nConverts the argument into bytes, for example 4 kB becomes 4096.\nTakes a single string value as an argument.\n\n\n- *Type*: rvalue\n\ntype\n----\nReturns the type when passed a variable. Type can be one of:\n\n* string\n* array\n* hash\n* float\n* integer\n* boolean\n\n\n- *Type*: rvalue\n\nunion\n-----\nThis function returns a union of two arrays.\n\n*Examples:*\n\n    union([\"a\",\"b\",\"c\"],[\"b\",\"c\",\"d\"])\n\nWould return: [\"a\",\"b\",\"c\",\"d\"]\n\n\nunique\n------\nThis function will remove duplicates from strings and arrays.\n\n*Examples:*\n\n    unique(\"aabbcc\")\n\nWill return:\n\n    abc\n\nYou can also use this with arrays:\n\n    unique([\"a\",\"a\",\"b\",\"b\",\"c\",\"c\"])\n\nThis returns:\n\n    [\"a\",\"b\",\"c\"]\n\n\n- *Type*: rvalue\n\nupcase\n------\nConverts a string or an array of strings to uppercase.\n\n*Examples:*\n\n    upcase(\"abcd\")\n\nWill return:\n\n    ABCD\n\n\n- *Type*: rvalue\n\nuriescape\n---------\nUrlencodes a string or array of strings.\nRequires either a single string or an array as an input.\n\n\n- *Type*: rvalue\n\nvalidate_absolute_path\n----------------------\nValidate the string represents an absolute path in the filesystem.  This function works\nfor windows and unix style paths.\n\nThe following values will pass:\n\n    $my_path = \"C:/Program Files (x86)/Puppet Labs/Puppet\"\n    validate_absolute_path($my_path)\n    $my_path2 = \"/var/lib/puppet\"\n    validate_absolute_path($my_path2)\n\n\nThe following values will fail, causing compilation to abort:\n\n    validate_absolute_path(true)\n    validate_absolute_path([ 'var/lib/puppet', '/var/foo' ])\n    validate_absolute_path([ '/var/lib/puppet', 'var/foo' ])\n    $undefined = undef\n    validate_absolute_path($undefined)\n\n\n\n- *Type*: statement\n\nvalidate_array\n--------------\nValidate that all passed values are array data structures. Abort catalog\ncompilation if any value fails this check.\n\nThe following values will pass:\n\n    $my_array = [ 'one', 'two' ]\n    validate_array($my_array)\n\nThe following values will fail, causing compilation to abort:\n\n    validate_array(true)\n    validate_array('some_string')\n    $undefined = undef\n    validate_array($undefined)\n\n\n\n- *Type*: statement\n\nvalidate_augeas\n---------------\nPerform validation of a string using an Augeas lens\nThe first argument of this function should be a string to\ntest, and the second argument should be the name of the Augeas lens to use.\nIf Augeas fails to parse the string with the lens, the compilation will\nabort with a parse error.\n\nA third argument can be specified, listing paths which should\nnot be found in the file. The `$file` variable points to the location\nof the temporary file being tested in the Augeas tree.\n\nFor example, if you want to make sure your passwd content never contains\na user `foo`, you could write:\n\n    validate_augeas($passwdcontent, 'Passwd.lns', ['$file/foo'])\n\nOr if you wanted to ensure that no users used the '/bin/barsh' shell,\nyou could use:\n\n    validate_augeas($passwdcontent, 'Passwd.lns', ['$file/*[shell=\"/bin/barsh\"]']\n\nIf a fourth argument is specified, this will be the error message raised and\nseen by the user.\n\nA helpful error message can be returned like this:\n\n    validate_augeas($sudoerscontent, 'Sudoers.lns', [], 'Failed to validate sudoers content with Augeas')\n\n\n\n- *Type*: statement\n\nvalidate_bool\n-------------\nValidate that all passed values are either true or false. Abort catalog\ncompilation if any value fails this check.\n\nThe following values will pass:\n\n    $iamtrue = true\n    validate_bool(true)\n    validate_bool(true, true, false, $iamtrue)\n\nThe following values will fail, causing compilation to abort:\n\n    $some_array = [ true ]\n    validate_bool(\"false\")\n    validate_bool(\"true\")\n    validate_bool($some_array)\n\n\n\n- *Type*: statement\n\nvalidate_cmd\n------------\nPerform validation of a string with an external command.\nThe first argument of this function should be a string to\ntest, and the second argument should be a path to a test command\ntaking a file as last argument. If the command, launched against\na tempfile containing the passed string, returns a non-null value,\ncompilation will abort with a parse error.\n\nIf a third argument is specified, this will be the error message raised and\nseen by the user.\n\nA helpful error message can be returned like this:\n\nExample:\n\n    validate_cmd($sudoerscontent, '/usr/sbin/visudo -c -f', 'Visudo failed to validate sudoers content')\n\n\n\n- *Type*: statement\n\nvalidate_hash\n-------------\nValidate that all passed values are hash data structures. Abort catalog\ncompilation if any value fails this check.\n\nThe following values will pass:\n\n    $my_hash = { 'one' => 'two' }\n    validate_hash($my_hash)\n\nThe following values will fail, causing compilation to abort:\n\n    validate_hash(true)\n    validate_hash('some_string')\n    $undefined = undef\n    validate_hash($undefined)\n\n\n\n- *Type*: statement\n\nvalidate_re\n-----------\nPerform simple validation of a string against one or more regular\nexpressions. The first argument of this function should be a string to\ntest, and the second argument should be a stringified regular expression\n(without the // delimiters) or an array of regular expressions.  If none\nof the regular expressions match the string passed in, compilation will\nabort with a parse error.\n\nIf a third argument is specified, this will be the error message raised and\nseen by the user.\n\nThe following strings will validate against the regular expressions:\n\n    validate_re('one', '^one$')\n    validate_re('one', [ '^one', '^two' ])\n\nThe following strings will fail to validate, causing compilation to abort:\n\n    validate_re('one', [ '^two', '^three' ])\n\nA helpful error message can be returned like this:\n\n    validate_re($::puppetversion, '^2.7', 'The $puppetversion fact value does not match 2.7')\n\n\n\n- *Type*: statement\n\nvalidate_slength\n----------------\nValidate that the first argument is a string (or an array of strings), and\nless/equal to than the length of the second argument.  It fails if the first\nargument is not a string or array of strings, and if arg 2 is not convertable\nto a number.\n\nThe following values will pass:\n\n    validate_slength(\"discombobulate\",17)\n    validate_slength([\"discombobulate\",\"moo\"],17)\n\nThe following values will not:\n\n    validate_slength(\"discombobulate\",1)\n    validate_slength([\"discombobulate\",\"thermometer\"],5)\n\n\n\n- *Type*: statement\n\nvalidate_string\n---------------\nValidate that all passed values are string data structures. Abort catalog\ncompilation if any value fails this check.\n\nThe following values will pass:\n\n    $my_string = \"one two\"\n    validate_string($my_string, 'three')\n\nThe following values will fail, causing compilation to abort:\n\n    validate_string(true)\n    validate_string([ 'some', 'array' ])\n    $undefined = undef\n    validate_string($undefined)\n\n\n- *Type*: statement\n\nvalues\n------\nWhen given a hash this function will return the values of that hash.\n\n*Examples:*\n\n    $hash = {\n      'a' => 1,\n      'b' => 2,\n      'c' => 3,\n    }\n    values($hash)\n\nThis example would return:\n\n    [1,2,3]\n\n\n- *Type*: rvalue\n\nvalues_at\n---------\nFinds value inside an array based on location.\n\nThe first argument is the array you want to analyze, and the second element can\nbe a combination of:\n\n* A single numeric index\n* A range in the form of 'start-stop' (eg. 4-9)\n* An array combining the above\n\n*Examples*:\n\n    values_at(['a','b','c'], 2)\n\nWould return ['c'].\n\n    values_at(['a','b','c'], [\"0-1\"])\n\nWould return ['a','b'].\n\n    values_at(['a','b','c','d','e'], [0, \"2-3\"])\n\nWould return ['a','c','d'].\n\n\n- *Type*: rvalue\n\nzip\n---\nTakes one element from first array and merges corresponding elements from second array. This generates a sequence of n-element arrays, where n is one more than the count of arguments.\n\n*Example:*\n\n    zip(['1','2','3'],['4','5','6'])\n\nWould result in:\n\n    [\"1\", \"4\"], [\"2\", \"5\"], [\"3\", \"6\"]\n\n\n- *Type*: rvalue\n\n*This page autogenerated on 2013-04-11 13:54:25 -0700*\n",
      "changelog": "##2014-07-15 - Supported Release 4.3.2\n###Summary\n\nThis release merely updates metadata.json so the module can be uninstalled and\nupgraded via the puppet module command.\n\n##2014-07-14 - Supported Release 4.3.1\n### Summary\nThis supported release updates the metadata.json to work around upgrade behavior of the PMT.\n\n#### Bugfixes\n- Synchronize metadata.json with PMT-generated metadata to pass checksums\n\n##2014-06-27 - Supported Release 4.3.0\n### Summary\nThis release is the first supported release of the stdlib 4 series. It remains\nbackwards-compatible with the stdlib 3 series. It adds two new functions, one bugfix, and many testing updates.\n\n#### Features\n- New `bool2str()` function\n- New `camalcase()` function\n\n#### Bugfixes\n- Fix `has_interface_with()` when interfaces fact is nil\n\n##2014-06-04 - Release 4.2.2\n### Summary\n\nThis release adds PE3.3 support in the metadata and fixes a few tests.\n\n## 2014-05-08 - Release - 4.2.1\n### Summary\nThis release moves a stray symlink that can cause problems.\n\n## 2014-05-08 - Release - 4.2.0\n### Summary\nThis release adds many new functions and fixes, and continues to be backwards compatible with stdlib 3.x\n\n#### Features\n- New `base64()` function\n- New `deep_merge()` function\n- New `delete_undef_values()` function\n- New `delete_values()` function\n- New `difference()` function\n- New `intersection()` function\n- New `is_bool()` function\n- New `pick_default()` function\n- New `union()` function\n- New `validate_ipv4_address` function\n- New `validate_ipv6_address` function\n- Update `ensure_packages()` to take an option hash as a second parameter.\n- Update `range()` to take an optional third argument for range step\n- Update `validate_slength()` to take an optional third argument for minimum length\n- Update `file_line` resource to take `after` and `multiple` attributes\n\n#### Bugfixes\n- Correct `is_string`, `is_domain_name`, `is_array`, `is_float`, and `is_function_available` for parsing odd types such as bools and hashes.\n- Allow facts.d facts to contain `=` in the value\n- Fix `root_home` fact on darwin systems\n- Fix `concat()` to work with a second non-array argument\n- Fix `floor()` to work with integer strings\n- Fix `is_integer()` to return true if passed integer strings\n- Fix `is_numeric()` to return true if passed integer strings\n- Fix `merge()` to work with empty strings\n- Fix `pick()` to raise the correct error type\n- Fix `uriescape()` to use the default URI.escape list\n- Add/update unit & acceptance tests.\n\n\n##2014-03-04 - Supported Release - 3.2.1\n###Summary\nThis is a supported release\n\n####Bugfixes\n- Fixed `is_integer`/`is_float`/`is_numeric` for checking the value of arithmatic expressions.\n\n####Known bugs\n* No known bugs\n\n---\n\n##### 2013-05-06 - Jeff McCune <jeff@puppetlabs.com> - 4.1.0\n\n * (#20582) Restore facter\\_dot\\_d to stdlib for PE users (3b887c8)\n * (maint) Update Gemfile with GEM\\_FACTER\\_VERSION (f44d535)\n\n##### 2013-05-06 - Alex Cline <acline@us.ibm.com> - 4.1.0\n\n * Terser method of string to array conversion courtesy of ethooz. (d38bce0)\n\n##### 2013-05-06 - Alex Cline <acline@us.ibm.com> 4.1.0\n\n * Refactor ensure\\_resource expectations (b33cc24)\n\n##### 2013-05-06 - Alex Cline <acline@us.ibm.com> 4.1.0\n\n * Changed str-to-array conversion and removed abbreviation. (de253db)\n\n##### 2013-05-03 - Alex Cline <acline@us.ibm.com> 4.1.0\n\n * (#20548) Allow an array of resource titles to be passed into the ensure\\_resource function (e08734a)\n\n##### 2013-05-02 - Raphaël Pinson <raphael.pinson@camptocamp.com> - 4.1.0\n\n * Add a dirname function (2ba9e47)\n\n##### 2013-04-29 - Mark Smith-Guerrero <msmithgu@gmail.com> - 4.1.0\n\n * (maint) Fix a small typo in hash() description (928036a)\n\n##### 2013-04-12 - Jeff McCune <jeff@puppetlabs.com> - 4.0.2\n\n * Update user information in gemspec to make the intent of the Gem clear.\n\n##### 2013-04-11 - Jeff McCune <jeff@puppetlabs.com> - 4.0.1\n\n * Fix README function documentation (ab3e30c)\n\n##### 2013-04-11 - Jeff McCune <jeff@puppetlabs.com> - 4.0.0\n\n * stdlib 4.0 drops support with Puppet 2.7\n * stdlib 4.0 preserves support with Puppet 3\n\n##### 2013-04-11 - Jeff McCune <jeff@puppetlabs.com> - 4.0.0\n\n * Add ability to use puppet from git via bundler (9c5805f)\n\n##### 2013-04-10 - Jeff McCune <jeff@puppetlabs.com> - 4.0.0\n\n * (maint) Make stdlib usable as a Ruby GEM (e81a45e)\n\n##### 2013-04-10 - Erik Dalén <dalen@spotify.com> - 4.0.0\n\n * Add a count function (f28550e)\n\n##### 2013-03-31 - Amos Shapira <ashapira@atlassian.com> - 4.0.0\n\n * (#19998) Implement any2array (7a2fb80)\n\n##### 2013-03-29 - Steve Huff <shuff@vecna.org> - 4.0.0\n\n * (19864) num2bool match fix (8d217f0)\n\n##### 2013-03-20 - Erik Dalén <dalen@spotify.com> - 4.0.0\n\n * Allow comparisons of Numeric and number as String (ff5dd5d)\n\n##### 2013-03-26 - Richard Soderberg <rsoderberg@mozilla.com> - 4.0.0\n\n * add suffix function to accompany the prefix function (88a93ac)\n\n##### 2013-03-19 - Kristof Willaert <kristof.willaert@gmail.com> - 4.0.0\n\n * Add floor function implementation and unit tests (0527341)\n\n##### 2012-04-03 - Eric Shamow <eric@puppetlabs.com> - 4.0.0\n\n * (#13610) Add is\\_function\\_available to stdlib (961dcab)\n\n##### 2012-12-17 - Justin Lambert <jlambert@eml.cc> - 4.0.0\n\n * str2bool should return a boolean if called with a boolean (5d5a4d4)\n\n##### 2012-10-23 - Uwe Stuehler <ustuehler@team.mobile.de> - 4.0.0\n\n * Fix number of arguments check in flatten() (e80207b)\n\n##### 2013-03-11 - Jeff McCune <jeff@puppetlabs.com> - 4.0.0\n\n * Add contributing document (96e19d0)\n\n##### 2013-03-04 - Raphaël Pinson <raphael.pinson@camptocamp.com> - 4.0.0\n\n * Add missing documentation for validate\\_augeas and validate\\_cmd to README.markdown (a1510a1)\n\n##### 2013-02-14 - Joshua Hoblitt <jhoblitt@cpan.org> - 4.0.0\n\n * (#19272) Add has\\_element() function (95cf3fe)\n\n##### 2013-02-07 - Raphaël Pinson <raphael.pinson@camptocamp.com> - 4.0.0\n\n * validate\\_cmd(): Use Puppet::Util::Execution.execute when available (69248df)\n\n##### 2012-12-06 - Raphaël Pinson <raphink@gmail.com> - 4.0.0\n\n * Add validate\\_augeas function (3a97c23)\n\n##### 2012-12-06 - Raphaël Pinson <raphink@gmail.com> - 4.0.0\n\n * Add validate\\_cmd function (6902cc5)\n\n##### 2013-01-14 - David Schmitt <david@dasz.at> - 4.0.0\n\n * Add geppetto project definition (b3fc0a3)\n\n##### 2013-01-02 - Jaka Hudoklin <jakahudoklin@gmail.com> - 4.0.0\n\n * Add getparam function to get defined resource parameters (20e0e07)\n\n##### 2013-01-05 - Jeff McCune <jeff@puppetlabs.com> - 4.0.0\n\n * (maint) Add Travis CI Support (d082046)\n\n##### 2012-12-04 - Jeff McCune <jeff@puppetlabs.com> - 4.0.0\n\n * Clarify that stdlib 3 supports Puppet 3 (3a6085f)\n\n##### 2012-11-30 - Erik Dalén <dalen@spotify.com> - 4.0.0\n\n * maint: style guideline fixes (7742e5f)\n\n##### 2012-11-09 - James Fryman <james@frymanet.com> - 4.0.0\n\n * puppet-lint cleanup (88acc52)\n\n##### 2012-11-06 - Joe Julian <me@joejulian.name> - 4.0.0\n\n * Add function, uriescape, to URI.escape strings. Redmine #17459 (fd52b8d)\n\n##### 2012-09-18 - Chad Metcalf <chad@wibidata.com> - 3.2.0\n\n * Add an ensure\\_packages function. (8a8c09e)\n\n##### 2012-11-23 - Erik DalÃƒÂ©n <dalen@spotify.com> - 3.2.0\n\n * (#17797) min() and max() functions (9954133)\n\n##### 2012-05-23 - Peter Meier <peter.meier@immerda.ch> - 3.2.0\n\n * (#14670) autorequire a file\\_line resource's path (dfcee63)\n\n##### 2012-11-19 - Joshua Harlan Lifton <lifton@puppetlabs.com> - 3.2.0\n\n * Add join\\_keys\\_to\\_values function (ee0f2b3)\n\n##### 2012-11-17 - Joshua Harlan Lifton <lifton@puppetlabs.com> - 3.2.0\n\n * Extend delete function for strings and hashes (7322e4d)\n\n##### 2012-08-03 - Gary Larizza <gary@puppetlabs.com> - 3.2.0\n\n * Add the pick() function (ba6dd13)\n\n##### 2012-03-20 - Wil Cooley <wcooley@pdx.edu> - 3.2.0\n\n * (#13974) Add predicate functions for interface facts (f819417)\n\n##### 2012-11-06 - Joe Julian <me@joejulian.name> - 3.2.0\n\n * Add function, uriescape, to URI.escape strings. Redmine #17459 (70f4a0e)\n\n##### 2012-10-25 - Jeff McCune <jeff@puppetlabs.com> - 3.1.1\n\n * (maint) Fix spec failures resulting from Facter API changes (97f836f)\n\n##### 2012-10-23 - Matthaus Owens <matthaus@puppetlabs.com> - 3.1.0\n\n * Add PE facts to stdlib (cdf3b05)\n\n##### 2012-08-16 - Jeff McCune <jeff@puppetlabs.com> - 3.0.1\n\n * Fix accidental removal of facts\\_dot\\_d.rb in 3.0.0 release\n\n##### 2012-08-16 - Jeff McCune <jeff@puppetlabs.com> - 3.0.0\n\n * stdlib 3.0 drops support with Puppet 2.6\n * stdlib 3.0 preserves support with Puppet 2.7\n\n##### 2012-08-07 - Dan Bode <dan@puppetlabs.com> - 3.0.0\n\n * Add function ensure\\_resource and defined\\_with\\_params (ba789de)\n\n##### 2012-07-10 - Hailee Kenney <hailee@puppetlabs.com> - 3.0.0\n\n * (#2157) Remove facter\\_dot\\_d for compatibility with external facts (f92574f)\n\n##### 2012-04-10 - Chris Price <chris@puppetlabs.com> - 3.0.0\n\n * (#13693) moving logic from local spec\\_helper to puppetlabs\\_spec\\_helper (85f96df)\n\n##### 2012-10-25 - Jeff McCune <jeff@puppetlabs.com> - 2.5.1\n\n * (maint) Fix spec failures resulting from Facter API changes (97f836f)\n\n##### 2012-10-23 - Matthaus Owens <matthaus@puppetlabs.com> - 2.5.0\n\n * Add PE facts to stdlib (cdf3b05)\n\n##### 2012-08-15 - Dan Bode <dan@puppetlabs.com> - 2.5.0\n\n * Explicitly load functions used by ensure\\_resource (9fc3063)\n\n##### 2012-08-13 - Dan Bode <dan@puppetlabs.com> - 2.5.0\n\n * Add better docs about duplicate resource failures (97d327a)\n\n##### 2012-08-13 - Dan Bode <dan@puppetlabs.com> - 2.5.0\n\n * Handle undef for parameter argument (4f8b133)\n\n##### 2012-08-07 - Dan Bode <dan@puppetlabs.com> - 2.5.0\n\n * Add function ensure\\_resource and defined\\_with\\_params (a0cb8cd)\n\n##### 2012-08-20 - Jeff McCune <jeff@puppetlabs.com> - 2.5.0\n\n * Disable tests that fail on 2.6.x due to #15912 (c81496e)\n\n##### 2012-08-20 - Jeff McCune <jeff@puppetlabs.com> - 2.5.0\n\n * (Maint) Fix mis-use of rvalue functions as statements (4492913)\n\n##### 2012-08-20 - Jeff McCune <jeff@puppetlabs.com> - 2.5.0\n\n * Add .rspec file to repo root (88789e8)\n\n##### 2012-06-07 - Chris Price <chris@puppetlabs.com> - 2.4.0\n\n * Add support for a 'match' parameter to file\\_line (a06c0d8)\n\n##### 2012-08-07 - Erik DalÃƒÂ©n <dalen@spotify.com> - 2.4.0\n\n * (#15872) Add to\\_bytes function (247b69c)\n\n##### 2012-07-19 - Jeff McCune <jeff@puppetlabs.com> - 2.4.0\n\n * (Maint) use PuppetlabsSpec::PuppetInternals.scope (master) (deafe88)\n\n##### 2012-07-10 - Hailee Kenney <hailee@puppetlabs.com> - 2.4.0\n\n * (#2157) Make facts\\_dot\\_d compatible with external facts (5fb0ddc)\n\n##### 2012-03-16 - Steve Traylen <steve.traylen@cern.ch> - 2.4.0\n\n * (#13205) Rotate array/string randomley based on fqdn, fqdn\\_rotate() (fef247b)\n\n##### 2012-05-22 - Peter Meier <peter.meier@immerda.ch> - 2.3.3\n\n * fix regression in #11017 properly (f0a62c7)\n\n##### 2012-05-10 - Jeff McCune <jeff@puppetlabs.com> - 2.3.3\n\n * Fix spec tests using the new spec\\_helper (7d34333)\n\n##### 2012-05-10 - Puppet Labs <support@puppetlabs.com> - 2.3.2\n\n * Make file\\_line default to ensure => present (1373e70)\n * Memoize file\\_line spec instance variables (20aacc5)\n * Fix spec tests using the new spec\\_helper (1ebfa5d)\n * (#13595) initialize\\_everything\\_for\\_tests couples modules Puppet ver (3222f35)\n * (#13439) Fix MRI 1.9 issue with spec\\_helper (15c5fd1)\n * (#13439) Fix test failures with Puppet 2.6.x (665610b)\n * (#13439) refactor spec helper for compatibility with both puppet 2.7 and master (82194ca)\n * (#13494) Specify the behavior of zero padded strings (61891bb)\n\n##### 2012-03-29 Puppet Labs <support@puppetlabs.com> - 2.1.3\n\n* (#11607) Add Rakefile to enable spec testing\n* (#12377) Avoid infinite loop when retrying require json\n\n##### 2012-03-13 Puppet Labs <support@puppetlabs.com> - 2.3.1\n\n* (#13091) Fix LoadError bug with puppet apply and puppet\\_vardir fact\n\n##### 2012-03-12 Puppet Labs <support@puppetlabs.com> - 2.3.0\n\n* Add a large number of new Puppet functions\n* Backwards compatibility preserved with 2.2.x\n\n##### 2011-12-30 Puppet Labs <support@puppetlabs.com> - 2.2.1\n\n* Documentation only release for the Forge\n\n##### 2011-12-30 Puppet Labs <support@puppetlabs.com> - 2.1.2\n\n* Documentation only release for PE 2.0.x\n\n##### 2011-11-08 Puppet Labs <support@puppetlabs.com> - 2.2.0\n\n* #10285 - Refactor json to use pson instead.\n* Maint  - Add watchr autotest script\n* Maint  - Make rspec tests work with Puppet 2.6.4\n* #9859  - Add root\\_home fact and tests\n\n##### 2011-08-18 Puppet Labs <support@puppetlabs.com> - 2.1.1\n\n* Change facts.d paths to match Facter 2.0 paths.\n* /etc/facter/facts.d\n* /etc/puppetlabs/facter/facts.d\n\n##### 2011-08-17 Puppet Labs <support@puppetlabs.com> - 2.1.0\n\n* Add R.I. Pienaar's facts.d custom facter fact\n* facts defined in /etc/facts.d and /etc/puppetlabs/facts.d are\n  automatically loaded now.\n\n##### 2011-08-04 Puppet Labs <support@puppetlabs.com> - 2.0.0\n\n* Rename whole\\_line to file\\_line\n* This is an API change and as such motivating a 2.0.0 release according to semver.org.\n\n##### 2011-08-04 Puppet Labs <support@puppetlabs.com> - 1.1.0\n\n* Rename append\\_line to whole\\_line\n* This is an API change and as such motivating a 1.1.0 release.\n\n##### 2011-08-04 Puppet Labs <support@puppetlabs.com> - 1.0.0\n\n* Initial stable release\n* Add validate\\_array and validate\\_string functions\n* Make merge() function work with Ruby 1.8.5\n* Add hash merging function\n* Add has\\_key function\n* Add loadyaml() function\n* Add append\\_line native\n\n##### 2011-06-21 Jeff McCune <jeff@puppetlabs.com> - 0.1.7\n\n* Add validate\\_hash() and getvar() functions\n\n##### 2011-06-15 Jeff McCune <jeff@puppetlabs.com> - 0.1.6\n\n* Add anchor resource type to provide containment for composite classes\n\n##### 2011-06-03 Jeff McCune <jeff@puppetlabs.com> - 0.1.5\n\n* Add validate\\_bool() function to stdlib\n\n##### 0.1.4 2011-05-26 Jeff McCune <jeff@puppetlabs.com>\n\n* Move most stages after main\n\n##### 0.1.3 2011-05-25 Jeff McCune <jeff@puppetlabs.com>\n\n* Add validate\\_re() function\n\n##### 0.1.2 2011-05-24 Jeff McCune <jeff@puppetlabs.com>\n\n* Update to add annotated tag\n\n##### 0.1.1 2011-05-24 Jeff McCune <jeff@puppetlabs.com>\n\n* Add stdlib::stages class with a standard set of stages\n",
      "license": "Copyright (C) 2011 Puppet Labs Inc\n\nand some parts:\n\nCopyright (C) 2011 Krzysztof Wilczynski\n\nPuppet Labs can be contacted at: info@puppetlabs.com\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
      "created_at": "2014-07-16 14:12:27 -0700",
      "updated_at": "2015-02-04 19:26:59 -0800",
      "deleted_at": null
    }
  ]
}